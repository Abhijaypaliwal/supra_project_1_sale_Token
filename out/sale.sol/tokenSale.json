{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_startTimestampPreSale",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endTimestampPreSale",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxEtherCapPreSale",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minUserContributionPreSale",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxUserContributionPreSale",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokenPricePreSale",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minEtherCapPreSale",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientAllowance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSpender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_tokenAmt",
          "type": "uint256"
        }
      ],
      "name": "adminTokenDist",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_etherAmt",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_tokenAmt",
          "type": "uint256"
        }
      ],
      "name": "depositPreSale",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_etherAmt",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_tokenAmt",
          "type": "uint256"
        }
      ],
      "name": "depositPublicSale",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_etherAmt",
          "type": "uint256"
        }
      ],
      "name": "preSaleRefundClaim",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_etherAmt",
          "type": "uint256"
        }
      ],
      "name": "publicSaleRefundClaim",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimRefundPreSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimRefundPublicSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_transferAddr",
          "type": "address"
        }
      ],
      "name": "distributeTokenAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endTimestampPreSale",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endTimestampPublicSale",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isPublicSale",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxEtherCapPreSale",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxEtherCapPublicSale",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxUserContributionPreSale",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxUserContributionPublicSale",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minEtherCapPreSale",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minEtherCapPublicSale",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minUserContributionPreSale",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minUserContributionPublicSale",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "presale",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "publicSale",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "remainingEthPreSale",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "remainingEthPublicSale",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_endTimestampPublicSale",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxEtherCapPublicSale",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minUserContributionPublicSale",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxUserContributionPublicSale",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokenPricePublicSale",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minEtherCapPublicSale",
          "type": "uint256"
        }
      ],
      "name": "startPublicSale",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startTimestampPreSale",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenPricePreSale",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenPricePublicSale",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506040516200174a3803806200174a83398101604081905262000034916200015a565b336040518060400160405280600e81526020016d29bab83930a232b6b7aa37b5b2b760911b81525060405180604001604052806009815260200168535550524144454d4f60b81b81525081600390816200008f919062000254565b5060046200009e828262000254565b5050506001600160a01b038116620000d057604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000db8162000108565b50600896909655600994909455600b839055600d91909155600e5560069190915560115560135562000320565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600080600080600080600060e0888a0312156200017657600080fd5b5050855160208701516040880151606089015160808a015160a08b015160c0909b0151949c939b50919990985090965094509092509050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620001da57607f821691505b602082108103620001fb57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200024f57600081815260208120601f850160051c810160208610156200022a5750805b601f850160051c820191505b818110156200024b5782815560010162000236565b5050505b505050565b81516001600160401b03811115620002705762000270620001af565b6200028881620002818454620001c5565b8462000201565b602080601f831160018114620002c05760008415620002a75750858301515b600019600386901b1c1916600185901b1785556200024b565b600085815260208120601f198616915b82811015620002f157888601518255948401946001909101908401620002d0565b5085821015620003105787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61141a80620003306000396000f3fe6080604052600436106101fc5760003560e01c806378c5fe371161010d578063b393293e116100a0578063e4fa9cf41161006f578063e4fa9cf414610549578063eaaea8d01461055f578063f2fde38b14610575578063fdea8e0b14610595578063ffc0b6ac1461059d57600080fd5b8063b393293e146104b7578063d0a08012146104cd578063dcae65ee146104ed578063dd62ed3e1461050357600080fd5b8063970b76a6116100dc578063970b76a61461044b578063a5a865dc14610461578063a9059cbb14610482578063aa776d82146104a257600080fd5b806378c5fe37146103e257806384e22a65146103f85780638da5cb5b1461040e57806395d89b411461043657600080fd5b80632356bb861161019057806341b587a41161015f57806341b587a414610356578063537c64011461036c57806357e621f31461038157806370a0823114610397578063715018a6146103cd57600080fd5b80632356bb86146102fa57806323b872dd14610310578063313ce5671461033057806333bc1c5c1461034c57600080fd5b80630d952049116101cc5780630d9520491461029957806318160ddd146102b9578063181a91ca146102ce5780631fb1c81f146102e457600080fd5b8062142b491461020857806306fdde0314610231578063095ea7b3146102535780630cd8109c1461028357600080fd5b3661020357005b600080fd5b34801561021457600080fd5b5061021e600d5481565b6040519081526020015b60405180910390f35b34801561023d57600080fd5b506102466105b3565b604051610228919061102f565b34801561025f57600080fd5b5061027361026e366004611099565b610645565b6040519015158152602001610228565b34801561028f57600080fd5b5061021e600c5481565b3480156102a557600080fd5b506102736102b43660046110c3565b61065f565b3480156102c557600080fd5b5060025461021e565b3480156102da57600080fd5b5061021e60145481565b3480156102f057600080fd5b5061021e600a5481565b34801561030657600080fd5b5061021e60085481565b34801561031c57600080fd5b5061027361032b366004611106565b6106f8565b34801561033c57600080fd5b5060405160128152602001610228565b61035461071c565b005b34801561036257600080fd5b5061021e60115481565b34801561037857600080fd5b50610354610861565b34801561038d57600080fd5b5061021e600b5481565b3480156103a357600080fd5b5061021e6103b2366004611142565b6001600160a01b031660009081526020819052604090205490565b3480156103d957600080fd5b506103546109c8565b3480156103ee57600080fd5b5061021e60075481565b34801561040457600080fd5b5061021e60095481565b34801561041a57600080fd5b506005546040516001600160a01b039091168152602001610228565b34801561044257600080fd5b506102466109dc565b34801561045757600080fd5b5061021e600e5481565b34801561046d57600080fd5b5060055461027390600160a01b900460ff1681565b34801561048e57600080fd5b5061027361049d366004611099565b6109eb565b3480156104ae57600080fd5b506103546109f9565b3480156104c357600080fd5b5061021e60065481565b3480156104d957600080fd5b506103546104e8366004611164565b610a90565b3480156104f957600080fd5b5061021e60125481565b34801561050f57600080fd5b5061021e61051e366004611190565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b34801561055557600080fd5b5061021e600f5481565b34801561056b57600080fd5b5061021e60105481565b34801561058157600080fd5b50610354610590366004611142565b610ade565b610354610b1c565b3480156105a957600080fd5b5061021e60135481565b6060600380546105c2906111ba565b80601f01602080910402602001604051908101604052809291908181526020018280546105ee906111ba565b801561063b5780601f106106105761010080835404028352916020019161063b565b820191906000526020600020905b81548152906001019060200180831161061e57829003601f168201915b5050505050905090565b600033610653818585610c73565b60019150505b92915050565b6000610669610c85565b42600954106106bf5760405162461bcd60e51b815260206004820152601760248201527f70726573616c65206973206e6f74206f7665722079657400000000000000000060448201526064015b60405180910390fd5b506005805460ff60a01b1916600160a01b179055600a95909555600c849055600f92909255601055600755601491909155601255600190565b600033610706858285610cb2565b610711858585610d30565b506001949350505050565b600554600160a01b900460ff161515600114801561073b575042600a54115b6107875760405162461bcd60e51b815260206004820152601e60248201527f7075626c69632073616c65206973206e6f74207374617274656420796574000060448201526064016106b6565b6012543411156107a95760405162461bcd60e51b81526004016106b6906111f4565b600f543410156107cb5760405162461bcd60e51b81526004016106b69061123e565b6010543411156107ed5760405162461bcd60e51b81526004016106b690611286565b6000600754346107fd91906112e4565b905034601260008282546108119190611306565b9091555061082190503382610d8f565b50604080513481526020810183905233917fe6739416f1effecdd1bc74de8cb2089e7c75cddc508632d0f27ca11f4f653f1d91015b60405180910390a250565b426009541080156108825750601354601154600b546108809190611306565b105b61089e5760405162461bcd60e51b81526004016106b690611319565b33600090815260208190526040812054116108cb5760405162461bcd60e51b81526004016106b690611376565b336000908152602081905260409020546108e530826109eb565b5060065460009033906108f890846113ba565b604051600081818185875af1925050503d8060008114610934576040519150601f19603f3d011682016040523d82523d6000602084013e610939565b606091505b50509050806109815760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b60448201526064016106b6565b60065433907f5cbe859760ed76424f7550e9c141659a615074a9398ffaf19e1b23046c76ec09906109b290856113ba565b6040519081526020015b60405180910390a25050565b6109d0610c85565b6109da6000610da4565b565b6060600480546105c2906111ba565b600033610653818585610d30565b42600a54108015610a1a5750601454601254600c54610a189190611306565b105b610a365760405162461bcd60e51b81526004016106b690611319565b3360009081526020819052604081205411610a635760405162461bcd60e51b81526004016106b690611376565b33600090815260208190526040902054610a7d30826109eb565b5060075460009033906108f890846113ba565b610a98610c85565b610aa28183610d8f565b50806001600160a01b03167fdf324260eaa319e2da481c334524f18aa999f9ea4936f7ca74c68bd7a9c46fac836040516109bc91815260200190565b610ae6610c85565b6001600160a01b038116610b1057604051631e4fbdf760e01b8152600060048201526024016106b6565b610b1981610da4565b50565b42600854108015610b2e575042600954115b610ba05760405162461bcd60e51b815260206004820152603860248201527f7468652061756374696f6e20697320656974686572206e6f742073746172746560448201527f64206f722061756374696f6e2069732066696e6973686564000000000000000060648201526084016106b6565b601154341115610bc25760405162461bcd60e51b81526004016106b6906111f4565b600d54341015610be45760405162461bcd60e51b81526004016106b69061123e565b600e54341115610c065760405162461bcd60e51b81526004016106b690611286565b600060065434610c1691906112e4565b90503460116000828254610c2a9190611306565b90915550610c3a90503382610d8f565b50604080513481526020810183905233917f85829429391d04c77a05d7a17a7d843f5549136b660b4168dcf32ed74fe7192d9101610856565b610c808383836001610df6565b505050565b6005546001600160a01b031633146109da5760405163118cdaa760e01b81523360048201526024016106b6565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610d2a5781811015610d1b57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016106b6565b610d2a84848484036000610df6565b50505050565b6001600160a01b038316610d5a57604051634b637e8f60e11b8152600060048201526024016106b6565b6001600160a01b038216610d845760405163ec442f0560e01b8152600060048201526024016106b6565b610c80838383610ecb565b6000610d9b8383610ff5565b50600192915050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038416610e205760405163e602df0560e01b8152600060048201526024016106b6565b6001600160a01b038316610e4a57604051634a1406b160e11b8152600060048201526024016106b6565b6001600160a01b0380851660009081526001602090815260408083209387168352929052208290558015610d2a57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610ebd91815260200190565b60405180910390a350505050565b6001600160a01b038316610ef6578060026000828254610eeb91906113d1565b90915550610f689050565b6001600160a01b03831660009081526020819052604090205481811015610f495760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016106b6565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610f8457600280548290039055610fa3565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610fe891815260200190565b60405180910390a3505050565b6001600160a01b03821661101f5760405163ec442f0560e01b8152600060048201526024016106b6565b61102b60008383610ecb565b5050565b600060208083528351808285015260005b8181101561105c57858101830151858201604001528201611040565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461109457600080fd5b919050565b600080604083850312156110ac57600080fd5b6110b58361107d565b946020939093013593505050565b60008060008060008060c087890312156110dc57600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b60008060006060848603121561111b57600080fd5b6111248461107d565b92506111326020850161107d565b9150604084013590509250925092565b60006020828403121561115457600080fd5b61115d8261107d565b9392505050565b6000806040838503121561117757600080fd5b823591506111876020840161107d565b90509250929050565b600080604083850312156111a357600080fd5b6111ac8361107d565b91506111876020840161107d565b600181811c908216806111ce57607f821691505b6020821081036111ee57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602a908201527f6d6178696d756d20636170206f6e20657468657265756d2072616973696e67206040820152691a5cc81c995858da195960b21b606082015260800190565b60208082526028908201527f616d6f756e74206973206c657373207468616e206d696e696d756d20636f6e746040820152673934b13aba34b7b760c11b606082015260800190565b60208082526028908201527f616d6f756e74206973206d6f7265207468616e206d6178696d756d20636f6e746040820152673934b13aba34b7b760c11b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60008261130157634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610659576106596112ce565b6020808252603c908201527f726566756e642063616e206f6e6c7920626520636c61696d6564206966206d6960408201527f6e696d756d2063617020697320616c7265616479207265616368656400000000606082015260800190565b60208082526024908201527f6e6f2073757072612064656d6f20746f6b656e2062616c616e6365206465746560408201526318dd195960e21b606082015260800190565b8082028115828204841417610659576106596112ce565b80820180821115610659576106596112ce56fea2646970667358221220a3b7143cc3200a78bc1f3f772f77d630ac52604a86025b34934ff7bbfae6013964736f6c63430008140033",
    "sourceMap": "335:11292:27:-:0;;;4942:798;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5283:10;1896:113:22;;;;;;;;;;;;;-1:-1:-1;;;1896:113:22;;;;;;;;;;;;;;;;-1:-1:-1;;;1896:113:22;;;1970:5;1962;:13;;;;;;:::i;:::-;-1:-1:-1;1985:7:22;:17;1995:7;1985;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:20;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:20;;1350:1;1322:31;;;3440:51:28;3413:18;;1322:31:20;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;5305:21:27::2;:46:::0;;;;5361:19:::2;:42:::0;;;;5413:18:::2;:40:::0;;;5463:26:::2;:56:::0;;;;5529:26:::2;:56:::0;5595:17:::2;:38:::0;;;;5643:19:::2;:40:::0;5693:18:::2;:40:::0;335:11292;;2912:187:20;3004:6;;;-1:-1:-1;;;;;3020:17:20;;;-1:-1:-1;;;;;;3020:17:20;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:554:28:-;138:6;146;154;162;170;178;186;239:3;227:9;218:7;214:23;210:33;207:53;;;256:1;253;246:12;207:53;-1:-1:-1;;279:16:28;;335:2;320:18;;314:25;379:2;364:18;;358:25;423:2;408:18;;402:25;467:3;452:19;;446:26;512:3;497:19;;491:26;557:3;542:19;;;536:26;279:16;;314:25;;-1:-1:-1;358:25:28;;402;;-1:-1:-1;446:26:28;;-1:-1:-1;491:26:28;-1:-1:-1;536:26:28;;-1:-1:-1;14:554:28;-1:-1:-1;14:554:28:o;573:127::-;634:10;629:3;625:20;622:1;615:31;665:4;662:1;655:15;689:4;686:1;679:15;705:380;784:1;780:12;;;;827;;;848:61;;902:4;894:6;890:17;880:27;;848:61;955:2;947:6;944:14;924:18;921:38;918:161;;1001:10;996:3;992:20;989:1;982:31;1036:4;1033:1;1026:15;1064:4;1061:1;1054:15;918:161;;705:380;;;:::o;1216:545::-;1318:2;1313:3;1310:11;1307:448;;;1354:1;1379:5;1375:2;1368:17;1424:4;1420:2;1410:19;1494:2;1482:10;1478:19;1475:1;1471:27;1465:4;1461:38;1530:4;1518:10;1515:20;1512:47;;;-1:-1:-1;1553:4:28;1512:47;1608:2;1603:3;1599:12;1596:1;1592:20;1586:4;1582:31;1572:41;;1663:82;1681:2;1674:5;1671:13;1663:82;;;1726:17;;;1707:1;1696:13;1663:82;;;1667:3;;;1307:448;1216:545;;;:::o;1937:1352::-;2057:10;;-1:-1:-1;;;;;2079:30:28;;2076:56;;;2112:18;;:::i;:::-;2141:97;2231:6;2191:38;2223:4;2217:11;2191:38;:::i;:::-;2185:4;2141:97;:::i;:::-;2293:4;;2357:2;2346:14;;2374:1;2369:663;;;;3076:1;3093:6;3090:89;;;-1:-1:-1;3145:19:28;;;3139:26;3090:89;-1:-1:-1;;1894:1:28;1890:11;;;1886:24;1882:29;1872:40;1918:1;1914:11;;;1869:57;3192:81;;2339:944;;2369:663;1163:1;1156:14;;;1200:4;1187:18;;-1:-1:-1;;2405:20:28;;;2523:236;2537:7;2534:1;2531:14;2523:236;;;2626:19;;;2620:26;2605:42;;2718:27;;;;2686:1;2674:14;;;;2553:19;;2523:236;;;2527:3;2787:6;2778:7;2775:19;2772:201;;;2848:19;;;2842:26;-1:-1:-1;;2931:1:28;2927:14;;;2943:3;2923:24;2919:37;2915:42;2900:58;2885:74;;2772:201;-1:-1:-1;;;;;3019:1:28;3003:14;;;2999:22;2986:36;;-1:-1:-1;1937:1352:28:o;3294:203::-;335:11292:27;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "335:11292:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1388:41;;;;;;;;;;;;;;;;;;;160:25:28;;;148:2;133:18;1388:41:27;;;;;;;;2074:89:22;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;4293:186::-;;;;;;;;;;-1:-1:-1;4293:186:22;;;;;:::i;:::-;;:::i;:::-;;;1351:14:28;;1344:22;1326:41;;1314:2;1299:18;4293:186:22;1186:187:28;1266:36:27;;;;;;;;;;;;;;;;7698:885;;;;;;;;;;-1:-1:-1;7698:885:27;;;;;:::i;:::-;;:::i;3144:97:22:-;;;;;;;;;;-1:-1:-1;3222:12:22;;3144:97;;2272:36:27;;;;;;;;;;;;;;;;1015:37;;;;;;;;;;;;;;;;810:36;;;;;;;;;;;;;;;;5039:244:22;;;;;;;;;;-1:-1:-1;5039:244:22;;;;;:::i;:::-;;:::i;3002:82::-;;;;;;;;;;-1:-1:-1;3002:82:22;;3075:2;2381:36:28;;2369:2;2354:18;3002:82:22;2239:184:28;8765:697:27;;;:::i;:::-;;1910:34;;;;;;;;;;;;;;;;10029:666;;;;;;;;;;;;;:::i;1141:33::-;;;;;;;;;;;;;;;;3299:116:22;;;;;;;;;;-1:-1:-1;3299:116:22;;;;;:::i;:::-;-1:-1:-1;;;;;3390:18:22;3364:7;3390:18;;;;;;;;;;;;3299:116;2293:101:20;;;;;;;;;;;;;:::i;707:35:27:-;;;;;;;;;;;;;;;;912:34;;;;;;;;;;;;;;;;1638:85:20;;;;;;;;;;-1:-1:-1;1710:6:20;;1638:85;;-1:-1:-1;;;;;1710:6:20;;;2765:51:28;;2753:2;2738:18;1638:85:20;2619:203:28;2276:93:22;;;;;;;;;;;;;:::i;1515:41:27:-;;;;;;;;;;;;;;;;504:24;;;;;;;;;;-1:-1:-1;504:24:27;;;;-1:-1:-1;;;504:24:27;;;;;;3610:178:22;;;;;;;;;;-1:-1:-1;3610:178:22;;;;;:::i;:::-;;:::i;10925:700:27:-;;;;;;;;;;;;;:::i;600:32::-;;;;;;;;;;;;;;;;9610:192;;;;;;;;;;-1:-1:-1;9610:192:27;;;;;:::i;:::-;;:::i;2035:37::-;;;;;;;;;;;;;;;;3846:140:22;;;;;;;;;;-1:-1:-1;3846:140:22;;;;;:::i;:::-;-1:-1:-1;;;;;3952:18:22;;;3926:7;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3846:140;1645:44:27;;;;;;;;;;;;;;;;1778;;;;;;;;;;;;;;;;2543:215:20;;;;;;;;;;-1:-1:-1;2543:215:20;;;;;:::i;:::-;;:::i;6248:752:27:-;;;:::i;2154:33::-;;;;;;;;;;;;;;;;2074:89:22;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;735:10:25;4420:31:22;735:10:25;4436:7:22;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;;:::o;7698:885:27:-;8013:4;1531:13:20;:11;:13::i;:::-;8059:15:27::1;8037:19;;:37;8029:73;;;::::0;-1:-1:-1;;;8029:73:27;;3938:2:28;8029:73:27::1;::::0;::::1;3920:21:28::0;3977:2;3957:18;;;3950:30;4016:25;3996:18;;;3989:53;4059:18;;8029:73:27::1;;;;;;;;;-1:-1:-1::0;8112:12:27::1;:19:::0;;-1:-1:-1;;;;8112:19:27::1;-1:-1:-1::0;;;8112:19:27::1;::::0;;8141:22:::1;:48:::0;;;;8199:21:::1;:46:::0;;;8255:29:::1;:62:::0;;;;8327:29:::1;:62:::0;8399:20:::1;:44:::0;8112:12:::1;8453:46:::0;;;;8509:22:::1;:46:::0;-1:-1:-1;;7698:885:27:o;5039:244:22:-;5126:4;735:10:25;5182:37:22;5198:4;735:10:25;5213:5:22;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;-1:-1:-1;5272:4:22;;5039:244;-1:-1:-1;;;;5039:244:22:o;8765:697:27:-;8822:12;;-1:-1:-1;;;8822:12:27;;;;:20;;8838:4;8822:20;:64;;;;;8871:15;8846:22;;:40;8822:64;8814:107;;;;-1:-1:-1;;;8814:107:27;;4290:2:28;8814:107:27;;;4272:21:28;4329:2;4309:18;;;4302:30;4368:32;4348:18;;;4341:60;4418:18;;8814:107:27;4088:354:28;8814:107:27;8952:22;;8939:9;:35;;8931:90;;;;-1:-1:-1;;;8931:90:27;;;;;;;:::i;:::-;9052:29;;9039:9;:42;;9031:95;;;;-1:-1:-1;;;9031:95:27;;;;;;;:::i;:::-;9157:29;;9144:9;:42;;9136:95;;;;-1:-1:-1;;;9136:95:27;;;;;;;:::i;:::-;9241:20;9276;;9264:9;:32;;;;:::i;:::-;9241:55;;9332:9;9306:22;;:35;;;;;;;:::i;:::-;;;;-1:-1:-1;9351:35:27;;-1:-1:-1;9361:10:27;9373:12;9351:9;:35::i;:::-;-1:-1:-1;9401:54:27;;;9431:9;6337:25:28;;6393:2;6378:18;;6371:34;;;9419:10:27;;9401:54;;6310:18:28;9401:54:27;;;;;;;;8804:658;8765:697::o;10029:666::-;10121:15;10099:19;;:37;:104;;;;;10185:18;;10162:19;;10141:18;;:40;;;;:::i;:::-;10140:63;10099:104;10078:211;;;;-1:-1:-1;;;10078:211:27;;;;;;;:::i;:::-;10318:10;10332:1;3390:18:22;;;;;;;;;;;10308:25:27;10300:74;;;;-1:-1:-1;;;10300:74:27;;;;;;;:::i;:::-;10416:10;10384:19;3390:18:22;;;;;;;;;;;10437:36:27;10454:4;3390:18:22;10437:8:27;:36::i;:::-;-1:-1:-1;10538:17:27;;10484:12;;10501:10;;10524:31;;:11;:31;:::i;:::-;10501:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10483:77;;;10578:7;10570:40;;;;-1:-1:-1;;;10570:40:27;;7835:2:28;10570:40:27;;;7817:21:28;7874:2;7854:18;;;7847:30;-1:-1:-1;;;7893:18:28;;;7886:50;7953:18;;10570:40:27;7633:344:28;10570:40:27;10670:17;;10644:10;;10625:63;;10656:31;;:11;:31;:::i;:::-;10625:63;;160:25:28;;;148:2;133:18;10625:63:27;;;;;;;;10068:627;;10029:666::o;2293:101:20:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2276:93:22:-;2323:13;2355:7;2348:14;;;;;:::i;3610:178::-;3679:4;735:10:25;3733:27:22;735:10:25;3750:2:22;3754:5;3733:9;:27::i;10925:700:27:-;11023:15;10998:22;;:40;:132;;;;;11109:21;;11083:22;;11059:21;;:46;;;;:::i;:::-;11058:72;10998:132;10977:239;;;;-1:-1:-1;;;10977:239:27;;;;;;;:::i;:::-;11245:10;11259:1;3390:18:22;;;;;;;;;;;11235:25:27;11227:74;;;;-1:-1:-1;;;11227:74:27;;;;;;;:::i;:::-;11343:10;11311:19;3390:18:22;;;;;;;;;;;11364:36:27;11381:4;3390:18:22;11364:8:27;:36::i;:::-;-1:-1:-1;11465:20:27;;11411:12;;11428:10;;11451:34;;:11;:34;:::i;9610:192::-;1531:13:20;:11;:13::i;:::-;9709:33:27::1;9719:13;9734:7;9709:9;:33::i;:::-;;9772:13;-1:-1:-1::0;;;;;9757:38:27::1;;9787:7;9757:38;;;;160:25:28::0;;148:2;133:18;;14:177;2543:215:20;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:20;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:20;;2700:1:::1;2672:31;::::0;::::1;2765:51:28::0;2738:18;;2672:31:20::1;2619:203:28::0;2623:91:20::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;6248:752:27:-;6339:15;6315:21;;:39;:80;;;;;6380:15;6358:19;;:37;6315:80;6294:183;;;;-1:-1:-1;;;6294:183:27;;8184:2:28;6294:183:27;;;8166:21:28;8223:2;8203:18;;;8196:30;8262:34;8242:18;;;8235:62;8333:26;8313:18;;;8306:54;8377:19;;6294:183:27;7982:420:28;6294:183:27;6508:19;;6495:9;:32;;6487:87;;;;-1:-1:-1;;;6487:87:27;;;;;;;:::i;:::-;6605:26;;6592:9;:39;;6584:92;;;;-1:-1:-1;;;6584:92:27;;;;;;;:::i;:::-;6707:26;;6694:9;:39;;6686:92;;;;-1:-1:-1;;;6686:92:27;;;;;;;:::i;:::-;6788:20;6823:17;;6811:9;:29;;;;:::i;:::-;6788:52;;6873:9;6850:19;;:32;;;;;;;:::i;:::-;;;;-1:-1:-1;6892:35:27;;-1:-1:-1;6902:10:27;6914:12;6892:9;:35::i;:::-;-1:-1:-1;6942:51:27;;;6969:9;6337:25:28;;6393:2;6378:18;;6371:34;;;6957:10:27;;6942:51;;6310:18:28;6942:51:27;6163:248:28;8989:128:22;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;1796:162:20:-;1710:6;;-1:-1:-1;;;;;1710:6:20;735:10:25;1855:23:20;1851:101;;1901:40;;-1:-1:-1;;;1901:40:20;;735:10:25;1901:40:20;;;2765:51:28;2738:18;;1901:40:20;2619:203:28;10663:477:22;-1:-1:-1;;;;;3952:18:22;;;10762:24;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10828:37:22;;10824:310;;10904:5;10885:16;:24;10881:130;;;10936:60;;-1:-1:-1;;;10936:60:22;;-1:-1:-1;;;;;8627:32:28;;10936:60:22;;;8609:51:28;8676:18;;;8669:34;;;8719:18;;;8712:34;;;8582:18;;10936:60:22;8407:345:28;10881:130:22;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10752:388;10663:477;;;:::o;5656:300::-;-1:-1:-1;;;;;5739:18:22;;5735:86;;5780:30;;-1:-1:-1;;;5780:30:22;;5807:1;5780:30;;;2765:51:28;2738:18;;5780:30:22;2619:203:28;5735:86:22;-1:-1:-1;;;;;5834:16:22;;5830:86;;5873:32;;-1:-1:-1;;;5873:32:22;;5902:1;5873:32;;;2765:51:28;2738:18;;5873:32:22;2619:203:28;5830:86:22;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;5930:130:27:-;5997:4;6013:19;6019:3;6024:7;6013:5;:19::i;:::-;-1:-1:-1;6049:4:27;5930:130;;;;:::o;2912:187:20:-;3004:6;;;-1:-1:-1;;;;;3020:17:20;;;-1:-1:-1;;;;;;3020:17:20;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;9949:432:22:-;-1:-1:-1;;;;;10061:19:22;;10057:89;;10103:32;;-1:-1:-1;;;10103:32:22;;10132:1;10103:32;;;2765:51:28;2738:18;;10103:32:22;2619:203:28;10057:89:22;-1:-1:-1;;;;;10159:21:22;;10155:90;;10203:31;;-1:-1:-1;;;10203:31:22;;10231:1;10203:31;;;2765:51:28;2738:18;;10203:31:22;2619:203:28;10155:90:22;-1:-1:-1;;;;;10254:18:22;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10299:76;;;;10349:7;-1:-1:-1;;;;;10333:31:22;10342:5;-1:-1:-1;;;;;10333:31:22;;10358:5;10333:31;;;;160:25:28;;148:2;133:18;;14:177;10333:31:22;;;;;;;;9949:432;;;;:::o;6271:1107::-;-1:-1:-1;;;;;6360:18:22;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:22;;-1:-1:-1;6356:540:22;;-1:-1:-1;;;;;6570:15:22;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:22;;-1:-1:-1;;;;;8627:32:28;;6649:50:22;;;8609:51:28;8676:18;;;8669:34;;;8719:18;;;8712:34;;;8582:18;;6649:50:22;8407:345:28;6599:115:22;-1:-1:-1;;;;;6834:15:22;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:22;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:22;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:22;7355:4;-1:-1:-1;;;;;7346:25:22;;7365:5;7346:25;;;;160::28;;148:2;133:18;;14:177;7346:25:22;;;;;;;;6271:1107;;;:::o;7721:208::-;-1:-1:-1;;;;;7791:21:22;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:22;;7864:1;7835:32;;;2765:51:28;2738:18;;7835:32:22;2619:203:28;7787:91:22;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;196:548:28:-;308:4;337:2;366;355:9;348:21;398:6;392:13;441:6;436:2;425:9;421:18;414:34;466:1;476:140;490:6;487:1;484:13;476:140;;;585:14;;;581:23;;575:30;551:17;;;570:2;547:26;540:66;505:10;;476:140;;;480:3;665:1;660:2;651:6;640:9;636:22;632:31;625:42;735:2;728;724:7;719:2;711:6;707:15;703:29;692:9;688:45;684:54;676:62;;;;196:548;;;;:::o;749:173::-;817:20;;-1:-1:-1;;;;;866:31:28;;856:42;;846:70;;912:1;909;902:12;846:70;749:173;;;:::o;927:254::-;995:6;1003;1056:2;1044:9;1035:7;1031:23;1027:32;1024:52;;;1072:1;1069;1062:12;1024:52;1095:29;1114:9;1095:29;:::i;:::-;1085:39;1171:2;1156:18;;;;1143:32;;-1:-1:-1;;;927:254:28:o;1378:523::-;1482:6;1490;1498;1506;1514;1522;1575:3;1563:9;1554:7;1550:23;1546:33;1543:53;;;1592:1;1589;1582:12;1543:53;-1:-1:-1;;1615:23:28;;;1685:2;1670:18;;1657:32;;-1:-1:-1;1736:2:28;1721:18;;1708:32;;1787:2;1772:18;;1759:32;;-1:-1:-1;1838:3:28;1823:19;;1810:33;;-1:-1:-1;1890:3:28;1875:19;1862:33;;-1:-1:-1;1378:523:28;-1:-1:-1;1378:523:28:o;1906:328::-;1983:6;1991;1999;2052:2;2040:9;2031:7;2027:23;2023:32;2020:52;;;2068:1;2065;2058:12;2020:52;2091:29;2110:9;2091:29;:::i;:::-;2081:39;;2139:38;2173:2;2162:9;2158:18;2139:38;:::i;:::-;2129:48;;2224:2;2213:9;2209:18;2196:32;2186:42;;1906:328;;;;;:::o;2428:186::-;2487:6;2540:2;2528:9;2519:7;2515:23;2511:32;2508:52;;;2556:1;2553;2546:12;2508:52;2579:29;2598:9;2579:29;:::i;:::-;2569:39;2428:186;-1:-1:-1;;;2428:186:28:o;2827:254::-;2895:6;2903;2956:2;2944:9;2935:7;2931:23;2927:32;2924:52;;;2972:1;2969;2962:12;2924:52;3008:9;2995:23;2985:33;;3037:38;3071:2;3060:9;3056:18;3037:38;:::i;:::-;3027:48;;2827:254;;;;;:::o;3086:260::-;3154:6;3162;3215:2;3203:9;3194:7;3190:23;3186:32;3183:52;;;3231:1;3228;3221:12;3183:52;3254:29;3273:9;3254:29;:::i;:::-;3244:39;;3302:38;3336:2;3325:9;3321:18;3302:38;:::i;3351:380::-;3430:1;3426:12;;;;3473;;;3494:61;;3548:4;3540:6;3536:17;3526:27;;3494:61;3601:2;3593:6;3590:14;3570:18;3567:38;3564:161;;3647:10;3642:3;3638:20;3635:1;3628:31;3682:4;3679:1;3672:15;3710:4;3707:1;3700:15;3564:161;;3351:380;;;:::o;4447:406::-;4649:2;4631:21;;;4688:2;4668:18;;;4661:30;4727:34;4722:2;4707:18;;4700:62;-1:-1:-1;;;4793:2:28;4778:18;;4771:40;4843:3;4828:19;;4447:406::o;4858:404::-;5060:2;5042:21;;;5099:2;5079:18;;;5072:30;5138:34;5133:2;5118:18;;5111:62;-1:-1:-1;;;5204:2:28;5189:18;;5182:38;5252:3;5237:19;;4858:404::o;5267:::-;5469:2;5451:21;;;5508:2;5488:18;;;5481:30;5547:34;5542:2;5527:18;;5520:62;-1:-1:-1;;;5613:2:28;5598:18;;5591:38;5661:3;5646:19;;5267:404::o;5676:127::-;5737:10;5732:3;5728:20;5725:1;5718:31;5768:4;5765:1;5758:15;5792:4;5789:1;5782:15;5808:217;5848:1;5874;5864:132;;5918:10;5913:3;5909:20;5906:1;5899:31;5953:4;5950:1;5943:15;5981:4;5978:1;5971:15;5864:132;-1:-1:-1;6010:9:28;;5808:217::o;6030:128::-;6097:9;;;6118:11;;;6115:37;;;6132:18;;:::i;6416:424::-;6618:2;6600:21;;;6657:2;6637:18;;;6630:30;6696:34;6691:2;6676:18;;6669:62;6767:30;6762:2;6747:18;;6740:58;6830:3;6815:19;;6416:424::o;6845:400::-;7047:2;7029:21;;;7086:2;7066:18;;;7059:30;7125:34;7120:2;7105:18;;7098:62;-1:-1:-1;;;7191:2:28;7176:18;;7169:34;7235:3;7220:19;;6845:400::o;7250:168::-;7323:9;;;7354;;7371:15;;;7365:22;;7351:37;7341:71;;7392:18;;:::i;8757:125::-;8822:9;;;8843:10;;;8840:36;;;8856:18;;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "claimRefundPreSale()": "537c6401",
    "claimRefundPublicSale()": "aa776d82",
    "decimals()": "313ce567",
    "distributeTokenAdmin(uint256,address)": "d0a08012",
    "endTimestampPreSale()": "84e22a65",
    "endTimestampPublicSale()": "1fb1c81f",
    "isPublicSale()": "a5a865dc",
    "maxEtherCapPreSale()": "57e621f3",
    "maxEtherCapPublicSale()": "0cd8109c",
    "maxUserContributionPreSale()": "970b76a6",
    "maxUserContributionPublicSale()": "eaaea8d0",
    "minEtherCapPreSale()": "ffc0b6ac",
    "minEtherCapPublicSale()": "181a91ca",
    "minUserContributionPreSale()": "00142b49",
    "minUserContributionPublicSale()": "e4fa9cf4",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "presale()": "fdea8e0b",
    "publicSale()": "33bc1c5c",
    "remainingEthPreSale()": "41b587a4",
    "remainingEthPublicSale()": "dcae65ee",
    "renounceOwnership()": "715018a6",
    "startPublicSale(uint256,uint256,uint256,uint256,uint256,uint256)": "0d952049",
    "startTimestampPreSale()": "2356bb86",
    "symbol()": "95d89b41",
    "tokenPricePreSale()": "b393293e",
    "tokenPricePublicSale()": "78c5fe37",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_startTimestampPreSale\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTimestampPreSale\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxEtherCapPreSale\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minUserContributionPreSale\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxUserContributionPreSale\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokenPricePreSale\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minEtherCapPreSale\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenAmt\",\"type\":\"uint256\"}],\"name\":\"adminTokenDist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_etherAmt\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenAmt\",\"type\":\"uint256\"}],\"name\":\"depositPreSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_etherAmt\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenAmt\",\"type\":\"uint256\"}],\"name\":\"depositPublicSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_etherAmt\",\"type\":\"uint256\"}],\"name\":\"preSaleRefundClaim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_etherAmt\",\"type\":\"uint256\"}],\"name\":\"publicSaleRefundClaim\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimRefundPreSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimRefundPublicSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_transferAddr\",\"type\":\"address\"}],\"name\":\"distributeTokenAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endTimestampPreSale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endTimestampPublicSale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPublicSale\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxEtherCapPreSale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxEtherCapPublicSale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxUserContributionPreSale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxUserContributionPublicSale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minEtherCapPreSale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minEtherCapPublicSale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minUserContributionPreSale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minUserContributionPublicSale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"presale\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"publicSale\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"remainingEthPreSale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"remainingEthPublicSale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_endTimestampPublicSale\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxEtherCapPublicSale\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minUserContributionPublicSale\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxUserContributionPublicSale\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokenPricePublicSale\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minEtherCapPublicSale\",\"type\":\"uint256\"}],\"name\":\"startPublicSale\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTimestampPreSale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPricePreSale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPricePublicSale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Abhijay Paliwal\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"adminTokenDist(address,uint256)\":{\"details\":\"This event is emitted when admin calls function to transfer tokens.\",\"params\":{\"_to\":\"address indexed Address to transfer token.\",\"_tokenAmt\":\"uint256 amount of token released to address.\"}},\"depositPreSale(address,uint256,uint256)\":{\"details\":\"This event is emitted when a user deposit ether at pre sale event\",\"params\":{\"_etherAmt\":\"uint256 amount of ether deposited.\",\"_to\":\"address indexed Address that triggered the deposit.\",\"_tokenAmt\":\"uint256 amount of token released to caller.\"}},\"depositPublicSale(address,uint256,uint256)\":{\"details\":\"This event is emitted when a user deposit ether at public sale event.\",\"params\":{\"_etherAmt\":\"uint256 amount of ether deposited.\",\"_to\":\"address indexed Address that triggered the deposit.\",\"_tokenAmt\":\"uint256 amount of token released to caller.\"}},\"preSaleRefundClaim(address,uint256)\":{\"details\":\"This event is emitted when ether collected is less than min threshold at specified time.\",\"params\":{\"_etherAmt\":\"uint256 amount of ether released to address.\",\"_to\":\"address indexed Address to transfer token.\"}},\"publicSaleRefundClaim(address,uint256)\":{\"details\":\"This event is emitted when ether collected is less than min threshold at specified time.\",\"params\":{\"_etherAmt\":\"uint256 amount of ether released to address.\",\"_to\":\"address indexed Address to transfer token.\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"claimRefundPreSale()\":{\"details\":\"function can only be called when min number of ether is NOT collected at specified time at pre sale\"},\"claimRefundPublicSale()\":{\"details\":\"function can only be called when min number of ether is NOT collected at specified time at public sale\"},\"constructor\":{\"details\":\"Contract constructor\",\"params\":{\"_endTimestampPreSale\":\"uint256 time to end presale\",\"_maxEtherCapPreSale\":\"uint256 max ether to collect at presale\",\"_maxUserContributionPreSale\":\"uint256 max amount which user can buy token\",\"_minEtherCapPreSale\":\"uint256 min acceptable ether collection to avoid refund\",\"_minUserContributionPreSale\":\"uint256 min amount which user can buy token\",\"_startTimestampPreSale\":\"uint256 time to start presale\",\"_tokenPricePreSale\":\"uint256 token price in terms of ether\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"distributeTokenAdmin(uint256,address)\":{\"details\":\"function can only be called by owner\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"presale()\":{\"details\":\"function is payable\"},\"publicSale()\":{\"details\":\"function is payable\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"startPublicSale(uint256,uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"function can only be called by owner\",\"params\":{\"_endTimestampPublicSale\":\"uint256 time to end public\",\"_maxEtherCapPublicSale\":\"uint256 max ether to collect at public sale\",\"_maxUserContributionPublicSale\":\"uint256 max amount which user can buy token\",\"_minEtherCapPublicSale\":\"uint256 min acceptable ether collection to avoid refund\",\"_minUserContributionPublicSale\":\"uint256 min amount which user can buy token\",\"_tokenPricePublicSale\":\"uint256 token price in terms of ether\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"tokenSale\",\"version\":1},\"userdoc\":{\"events\":{\"adminTokenDist(address,uint256)\":{\"notice\":\"Emitted when admin calls the function with amount of token to transfer\"},\"depositPreSale(address,uint256,uint256)\":{\"notice\":\"Emitted when ether is deposited at pre sale event\"},\"depositPublicSale(address,uint256,uint256)\":{\"notice\":\"Emitted when ether is deposited at public sale event.\"},\"preSaleRefundClaim(address,uint256)\":{\"notice\":\"Emitted when user calls function to claim ether.\"},\"publicSaleRefundClaim(address,uint256)\":{\"notice\":\"Emitted when user calls function to claim ether.\"}},\"kind\":\"user\",\"methods\":{\"claimRefundPreSale()\":{\"notice\":\"balance of token is refunded to contract and ether is released to user\"},\"claimRefundPublicSale()\":{\"notice\":\"balance of token is refunded to contract and ether is released to user\"},\"distributeTokenAdmin(uint256,address)\":{\"notice\":\"admin can call function to release token to specified address\"},\"endTimestampPreSale()\":{\"notice\":\"end time for pre sale event\"},\"endTimestampPublicSale()\":{\"notice\":\"end time for public sale event\"},\"isPublicSale()\":{\"notice\":\"boolean function to check if public sale id open or not\"},\"maxEtherCapPreSale()\":{\"notice\":\"maximum cap for ether collection at pre sale event\"},\"maxEtherCapPublicSale()\":{\"notice\":\"maximum cap for ether collection at public sale event\"},\"maxUserContributionPreSale()\":{\"notice\":\"max user contribution by user at pre sale event\"},\"maxUserContributionPublicSale()\":{\"notice\":\"max user contribution by user at public sale event\"},\"minEtherCapPreSale()\":{\"notice\":\"min ether to be collected at pre sale event\"},\"minEtherCapPublicSale()\":{\"notice\":\"min ether to be collected at public sale event\"},\"minUserContributionPreSale()\":{\"notice\":\"min user contribution by user at pre sale event\"},\"minUserContributionPublicSale()\":{\"notice\":\"min user contribution by user at public sale event\"},\"presale()\":{\"notice\":\"pre sale function to sell tokens at predefined pricefor sake of simplicity, 1 wei = 1 supra demo token\"},\"publicSale()\":{\"notice\":\"can only be called when presale gets overpublic sale function to sell tokens at predefined price\"},\"remainingEthPreSale()\":{\"notice\":\"remaining ether to be collected at pre sale event\"},\"remainingEthPublicSale()\":{\"notice\":\"remaining ether to be collected at public sale event\"},\"startPublicSale(uint256,uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"mint token when called\"},\"startTimestampPreSale()\":{\"notice\":\"start time for pre sale event\"},\"tokenPricePreSale()\":{\"notice\":\"fixed token price during pre sale\"},\"tokenPricePublicSale()\":{\"notice\":\"fixed token price during public sale\"}},\"notice\":\"sale contract of tokens at pre-define price at 2 stages- pre sale and public sale\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/sale.sol\":\"tokenSale\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\"lib/openzeppelin-contracts:@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"src/sale.sol\":{\"keccak256\":\"0x209ed4f0e48ab86b8b94c3455f0f5c6d4110c24d0e38e73aae81b9e329509390\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3020a3cce60a6408ed07edd15aa341370e14792150eee7bfd8593c919d565e70\",\"dweb:/ipfs/QmdF7z42cPmH2YUn6QhPfWmCs92pyAuXB4ZoKFBsP5JJrh\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_startTimestampPreSale",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_endTimestampPreSale",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_maxEtherCapPreSale",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_minUserContributionPreSale",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_maxUserContributionPreSale",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_tokenPricePreSale",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_minEtherCapPreSale",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "allowance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC20InsufficientAllowance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC20InsufficientBalance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "approver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidApprover"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidReceiver"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidSender"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidSpender"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableInvalidOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableUnauthorizedAccount"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_tokenAmt",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "adminTokenDist",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_etherAmt",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_tokenAmt",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "depositPreSale",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_etherAmt",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_tokenAmt",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "depositPublicSale",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_etherAmt",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "preSaleRefundClaim",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_etherAmt",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "publicSaleRefundClaim",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimRefundPreSale"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimRefundPublicSale"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_transferAddr",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "distributeTokenAdmin"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "endTimestampPreSale",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "endTimestampPublicSale",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isPublicSale",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxEtherCapPreSale",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxEtherCapPublicSale",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxUserContributionPreSale",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxUserContributionPublicSale",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minEtherCapPreSale",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minEtherCapPublicSale",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minUserContributionPreSale",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minUserContributionPublicSale",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "presale"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "publicSale"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "remainingEthPreSale",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "remainingEthPublicSale",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_endTimestampPublicSale",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_maxEtherCapPublicSale",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_minUserContributionPublicSale",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_maxUserContributionPublicSale",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_tokenPricePublicSale",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_minEtherCapPublicSale",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "startPublicSale",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "startTimestampPreSale",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenPricePreSale",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenPricePublicSale",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "claimRefundPreSale()": {
            "details": "function can only be called when min number of ether is NOT collected at specified time at pre sale"
          },
          "claimRefundPublicSale()": {
            "details": "function can only be called when min number of ether is NOT collected at specified time at public sale"
          },
          "constructor": {
            "details": "Contract constructor",
            "params": {
              "_endTimestampPreSale": "uint256 time to end presale",
              "_maxEtherCapPreSale": "uint256 max ether to collect at presale",
              "_maxUserContributionPreSale": "uint256 max amount which user can buy token",
              "_minEtherCapPreSale": "uint256 min acceptable ether collection to avoid refund",
              "_minUserContributionPreSale": "uint256 min amount which user can buy token",
              "_startTimestampPreSale": "uint256 time to start presale",
              "_tokenPricePreSale": "uint256 token price in terms of ether"
            }
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "distributeTokenAdmin(uint256,address)": {
            "details": "function can only be called by owner"
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "presale()": {
            "details": "function is payable"
          },
          "publicSale()": {
            "details": "function is payable"
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "startPublicSale(uint256,uint256,uint256,uint256,uint256,uint256)": {
            "details": "function can only be called by owner",
            "params": {
              "_endTimestampPublicSale": "uint256 time to end public",
              "_maxEtherCapPublicSale": "uint256 max ether to collect at public sale",
              "_maxUserContributionPublicSale": "uint256 max amount which user can buy token",
              "_minEtherCapPublicSale": "uint256 min acceptable ether collection to avoid refund",
              "_minUserContributionPublicSale": "uint256 min amount which user can buy token",
              "_tokenPricePublicSale": "uint256 token price in terms of ether"
            }
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "claimRefundPreSale()": {
            "notice": "balance of token is refunded to contract and ether is released to user"
          },
          "claimRefundPublicSale()": {
            "notice": "balance of token is refunded to contract and ether is released to user"
          },
          "distributeTokenAdmin(uint256,address)": {
            "notice": "admin can call function to release token to specified address"
          },
          "endTimestampPreSale()": {
            "notice": "end time for pre sale event"
          },
          "endTimestampPublicSale()": {
            "notice": "end time for public sale event"
          },
          "isPublicSale()": {
            "notice": "boolean function to check if public sale id open or not"
          },
          "maxEtherCapPreSale()": {
            "notice": "maximum cap for ether collection at pre sale event"
          },
          "maxEtherCapPublicSale()": {
            "notice": "maximum cap for ether collection at public sale event"
          },
          "maxUserContributionPreSale()": {
            "notice": "max user contribution by user at pre sale event"
          },
          "maxUserContributionPublicSale()": {
            "notice": "max user contribution by user at public sale event"
          },
          "minEtherCapPreSale()": {
            "notice": "min ether to be collected at pre sale event"
          },
          "minEtherCapPublicSale()": {
            "notice": "min ether to be collected at public sale event"
          },
          "minUserContributionPreSale()": {
            "notice": "min user contribution by user at pre sale event"
          },
          "minUserContributionPublicSale()": {
            "notice": "min user contribution by user at public sale event"
          },
          "presale()": {
            "notice": "pre sale function to sell tokens at predefined pricefor sake of simplicity, 1 wei = 1 supra demo token"
          },
          "publicSale()": {
            "notice": "can only be called when presale gets overpublic sale function to sell tokens at predefined price"
          },
          "remainingEthPreSale()": {
            "notice": "remaining ether to be collected at pre sale event"
          },
          "remainingEthPublicSale()": {
            "notice": "remaining ether to be collected at public sale event"
          },
          "startPublicSale(uint256,uint256,uint256,uint256,uint256,uint256)": {
            "notice": "mint token when called"
          },
          "startTimestampPreSale()": {
            "notice": "start time for pre sale event"
          },
          "tokenPricePreSale()": {
            "notice": "fixed token price during pre sale"
          },
          "tokenPricePublicSale()": {
            "notice": "fixed token price during public sale"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "lib/openzeppelin-contracts:@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/sale.sol": "tokenSale"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
        "urls": [
          "bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
          "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80",
        "urls": [
          "bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229",
          "dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2",
        "urls": [
          "bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850",
          "dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "src/sale.sol": {
        "keccak256": "0x209ed4f0e48ab86b8b94c3455f0f5c6d4110c24d0e38e73aae81b9e329509390",
        "urls": [
          "bzz-raw://3020a3cce60a6408ed07edd15aa341370e14792150eee7bfd8593c919d565e70",
          "dweb:/ipfs/QmdF7z42cPmH2YUn6QhPfWmCs92pyAuXB4ZoKFBsP5JJrh"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/sale.sol",
    "id": 46559,
    "exportedSymbols": {
      "Context": [
        45514
      ],
      "ERC20": [
        45380
      ],
      "IERC20": [
        45458
      ],
      "IERC20Errors": [
        44770
      ],
      "IERC20Metadata": [
        45484
      ],
      "Ownable": [
        44728
      ],
      "tokenSale": [
        46558
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:11596:27",
    "nodes": [
      {
        "id": 46023,
        "nodeType": "PragmaDirective",
        "src": "32:24:27",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 46024,
        "nodeType": "ImportDirective",
        "src": "58:64:27",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46559,
        "sourceUnit": 45381,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 46025,
        "nodeType": "ImportDirective",
        "src": "123:61:27",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "openzeppelin-contracts/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46559,
        "sourceUnit": 44729,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 46558,
        "nodeType": "ContractDefinition",
        "src": "335:11292:27",
        "nodes": [
          {
            "id": 46034,
            "nodeType": "FunctionDefinition",
            "src": "378:29:27",
            "nodes": [],
            "body": {
              "id": 46033,
              "nodeType": "Block",
              "src": "405:2:27",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 46031,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "385:2:27"
            },
            "returnParameters": {
              "id": 46032,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "405:0:27"
            },
            "scope": 46558,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46037,
            "nodeType": "VariableDeclaration",
            "src": "504:24:27",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 46035,
              "nodeType": "StructuredDocumentation",
              "src": "417:82:27",
              "text": " @notice boolean function to check if public sale id open or not"
            },
            "functionSelector": "a5a865dc",
            "mutability": "mutable",
            "name": "isPublicSale",
            "nameLocation": "516:12:27",
            "scope": 46558,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 46036,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "504:4:27",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46040,
            "nodeType": "VariableDeclaration",
            "src": "600:32:27",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 46038,
              "nodeType": "StructuredDocumentation",
              "src": "535:60:27",
              "text": " @notice fixed token price during pre sale"
            },
            "functionSelector": "b393293e",
            "mutability": "mutable",
            "name": "tokenPricePreSale",
            "nameLocation": "615:17:27",
            "scope": 46558,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 46039,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "600:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46043,
            "nodeType": "VariableDeclaration",
            "src": "707:35:27",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 46041,
              "nodeType": "StructuredDocumentation",
              "src": "639:63:27",
              "text": " @notice fixed token price during public sale"
            },
            "functionSelector": "78c5fe37",
            "mutability": "mutable",
            "name": "tokenPricePublicSale",
            "nameLocation": "722:20:27",
            "scope": 46558,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 46042,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "707:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46046,
            "nodeType": "VariableDeclaration",
            "src": "810:36:27",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 46044,
              "nodeType": "StructuredDocumentation",
              "src": "749:56:27",
              "text": " @notice start time for pre sale event"
            },
            "functionSelector": "2356bb86",
            "mutability": "mutable",
            "name": "startTimestampPreSale",
            "nameLocation": "825:21:27",
            "scope": 46558,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 46045,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "810:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46049,
            "nodeType": "VariableDeclaration",
            "src": "912:34:27",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 46047,
              "nodeType": "StructuredDocumentation",
              "src": "853:54:27",
              "text": " @notice end time for pre sale event"
            },
            "functionSelector": "84e22a65",
            "mutability": "mutable",
            "name": "endTimestampPreSale",
            "nameLocation": "927:19:27",
            "scope": 46558,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 46048,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "912:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46052,
            "nodeType": "VariableDeclaration",
            "src": "1015:37:27",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 46050,
              "nodeType": "StructuredDocumentation",
              "src": "953:57:27",
              "text": " @notice end time for public sale event"
            },
            "functionSelector": "1fb1c81f",
            "mutability": "mutable",
            "name": "endTimestampPublicSale",
            "nameLocation": "1030:22:27",
            "scope": 46558,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 46051,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1015:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46055,
            "nodeType": "VariableDeclaration",
            "src": "1141:33:27",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 46053,
              "nodeType": "StructuredDocumentation",
              "src": "1059:77:27",
              "text": " @notice maximum cap for ether collection at pre sale event"
            },
            "functionSelector": "57e621f3",
            "mutability": "mutable",
            "name": "maxEtherCapPreSale",
            "nameLocation": "1156:18:27",
            "scope": 46558,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 46054,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1141:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46058,
            "nodeType": "VariableDeclaration",
            "src": "1266:36:27",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 46056,
              "nodeType": "StructuredDocumentation",
              "src": "1181:80:27",
              "text": " @notice maximum cap for ether collection at public sale event"
            },
            "functionSelector": "0cd8109c",
            "mutability": "mutable",
            "name": "maxEtherCapPublicSale",
            "nameLocation": "1281:21:27",
            "scope": 46558,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 46057,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1266:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46061,
            "nodeType": "VariableDeclaration",
            "src": "1388:41:27",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 46059,
              "nodeType": "StructuredDocumentation",
              "src": "1309:74:27",
              "text": " @notice min user contribution by user at pre sale event"
            },
            "functionSelector": "00142b49",
            "mutability": "mutable",
            "name": "minUserContributionPreSale",
            "nameLocation": "1403:26:27",
            "scope": 46558,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 46060,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1388:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46064,
            "nodeType": "VariableDeclaration",
            "src": "1515:41:27",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 46062,
              "nodeType": "StructuredDocumentation",
              "src": "1436:74:27",
              "text": " @notice max user contribution by user at pre sale event"
            },
            "functionSelector": "970b76a6",
            "mutability": "mutable",
            "name": "maxUserContributionPreSale",
            "nameLocation": "1530:26:27",
            "scope": 46558,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 46063,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1515:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46067,
            "nodeType": "VariableDeclaration",
            "src": "1645:44:27",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 46065,
              "nodeType": "StructuredDocumentation",
              "src": "1563:77:27",
              "text": " @notice min user contribution by user at public sale event"
            },
            "functionSelector": "e4fa9cf4",
            "mutability": "mutable",
            "name": "minUserContributionPublicSale",
            "nameLocation": "1660:29:27",
            "scope": 46558,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 46066,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1645:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46070,
            "nodeType": "VariableDeclaration",
            "src": "1778:44:27",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 46068,
              "nodeType": "StructuredDocumentation",
              "src": "1696:77:27",
              "text": " @notice max user contribution by user at public sale event"
            },
            "functionSelector": "eaaea8d0",
            "mutability": "mutable",
            "name": "maxUserContributionPublicSale",
            "nameLocation": "1793:29:27",
            "scope": 46558,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 46069,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1778:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46073,
            "nodeType": "VariableDeclaration",
            "src": "1910:34:27",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 46071,
              "nodeType": "StructuredDocumentation",
              "src": "1829:76:27",
              "text": " @notice remaining ether to be collected at pre sale event"
            },
            "functionSelector": "41b587a4",
            "mutability": "mutable",
            "name": "remainingEthPreSale",
            "nameLocation": "1925:19:27",
            "scope": 46558,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 46072,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1910:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46076,
            "nodeType": "VariableDeclaration",
            "src": "2035:37:27",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 46074,
              "nodeType": "StructuredDocumentation",
              "src": "1951:79:27",
              "text": " @notice remaining ether to be collected at public sale event"
            },
            "functionSelector": "dcae65ee",
            "mutability": "mutable",
            "name": "remainingEthPublicSale",
            "nameLocation": "2050:22:27",
            "scope": 46558,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 46075,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2035:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46079,
            "nodeType": "VariableDeclaration",
            "src": "2154:33:27",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 46077,
              "nodeType": "StructuredDocumentation",
              "src": "2079:70:27",
              "text": " @notice min ether to be collected at pre sale event"
            },
            "functionSelector": "ffc0b6ac",
            "mutability": "mutable",
            "name": "minEtherCapPreSale",
            "nameLocation": "2169:18:27",
            "scope": 46558,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 46078,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2154:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46082,
            "nodeType": "VariableDeclaration",
            "src": "2272:36:27",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 46080,
              "nodeType": "StructuredDocumentation",
              "src": "2194:73:27",
              "text": " @notice min ether to be collected at public sale event"
            },
            "functionSelector": "181a91ca",
            "mutability": "mutable",
            "name": "minEtherCapPublicSale",
            "nameLocation": "2287:21:27",
            "scope": 46558,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 46081,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2272:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46091,
            "nodeType": "EventDefinition",
            "src": "2671:80:27",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 46083,
              "nodeType": "StructuredDocumentation",
              "src": "2315:351:27",
              "text": " @notice Emitted when ether is deposited at pre sale event\n @dev This event is emitted when a user deposit ether at pre sale event\n @param _to address indexed Address that triggered the deposit.\n @param _etherAmt uint256 amount of ether deposited.\n @param _tokenAmt uint256 amount of token released to caller."
            },
            "eventSelector": "85829429391d04c77a05d7a17a7d843f5549136b660b4168dcf32ed74fe7192d",
            "name": "depositPreSale",
            "nameLocation": "2677:14:27",
            "parameters": {
              "id": 46090,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46085,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "2708:3:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 46091,
                  "src": "2692:19:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46084,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2692:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46087,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_etherAmt",
                  "nameLocation": "2721:9:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 46091,
                  "src": "2713:17:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46086,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2713:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46089,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_tokenAmt",
                  "nameLocation": "2740:9:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 46091,
                  "src": "2732:17:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46088,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2732:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2691:59:27"
            }
          },
          {
            "id": 46100,
            "nodeType": "EventDefinition",
            "src": "3121:83:27",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 46092,
              "nodeType": "StructuredDocumentation",
              "src": "2757:359:27",
              "text": " @notice Emitted when ether is deposited at public sale event.\n @dev This event is emitted when a user deposit ether at public sale event.\n @param _to address indexed Address that triggered the deposit.\n @param _etherAmt uint256 amount of ether deposited.\n @param _tokenAmt uint256 amount of token released to caller."
            },
            "eventSelector": "e6739416f1effecdd1bc74de8cb2089e7c75cddc508632d0f27ca11f4f653f1d",
            "name": "depositPublicSale",
            "nameLocation": "3127:17:27",
            "parameters": {
              "id": 46099,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46094,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "3161:3:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 46100,
                  "src": "3145:19:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46093,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3145:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46096,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_etherAmt",
                  "nameLocation": "3174:9:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 46100,
                  "src": "3166:17:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46095,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3166:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46098,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_tokenAmt",
                  "nameLocation": "3193:9:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 46100,
                  "src": "3185:17:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46097,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3185:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3144:59:27"
            }
          },
          {
            "id": 46107,
            "nodeType": "EventDefinition",
            "src": "3522:61:27",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 46101,
              "nodeType": "StructuredDocumentation",
              "src": "3210:307:27",
              "text": " @notice Emitted when admin calls the function with amount of token to transfer\n @dev This event is emitted when admin calls function to transfer tokens.\n @param _to address indexed Address to transfer token.\n @param _tokenAmt uint256 amount of token released to address."
            },
            "eventSelector": "df324260eaa319e2da481c334524f18aa999f9ea4936f7ca74c68bd7a9c46fac",
            "name": "adminTokenDist",
            "nameLocation": "3528:14:27",
            "parameters": {
              "id": 46106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46103,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "3559:3:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 46107,
                  "src": "3543:19:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46102,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3543:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46105,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_tokenAmt",
                  "nameLocation": "3572:9:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 46107,
                  "src": "3564:17:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3564:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3542:40:27"
            }
          },
          {
            "id": 46114,
            "nodeType": "EventDefinition",
            "src": "3900:65:27",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 46108,
              "nodeType": "StructuredDocumentation",
              "src": "3589:306:27",
              "text": " @notice Emitted when user calls function to claim ether.\n @dev This event is emitted when ether collected is less than min threshold at specified time.\n @param _to address indexed Address to transfer token.\n @param _etherAmt uint256 amount of ether released to address."
            },
            "eventSelector": "5cbe859760ed76424f7550e9c141659a615074a9398ffaf19e1b23046c76ec09",
            "name": "preSaleRefundClaim",
            "nameLocation": "3906:18:27",
            "parameters": {
              "id": 46113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46110,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "3941:3:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 46114,
                  "src": "3925:19:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46109,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3925:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46112,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_etherAmt",
                  "nameLocation": "3954:9:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 46114,
                  "src": "3946:17:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46111,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3946:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3924:40:27"
            }
          },
          {
            "id": 46121,
            "nodeType": "EventDefinition",
            "src": "4282:68:27",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 46115,
              "nodeType": "StructuredDocumentation",
              "src": "3971:306:27",
              "text": " @notice Emitted when user calls function to claim ether.\n @dev This event is emitted when ether collected is less than min threshold at specified time.\n @param _to address indexed Address to transfer token.\n @param _etherAmt uint256 amount of ether released to address."
            },
            "eventSelector": "da020019df87fd585382b279cd04cc273cc5b79e358eed1ef385651556b4650d",
            "name": "publicSaleRefundClaim",
            "nameLocation": "4288:21:27",
            "parameters": {
              "id": 46120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46117,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "4326:3:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 46121,
                  "src": "4310:19:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46116,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4310:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46119,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_etherAmt",
                  "nameLocation": "4339:9:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 46121,
                  "src": "4331:17:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46118,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4331:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4309:40:27"
            }
          },
          {
            "id": 46180,
            "nodeType": "FunctionDefinition",
            "src": "4942:798:27",
            "nodes": [],
            "body": {
              "id": 46179,
              "nodeType": "Block",
              "src": "5295:445:27",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 46149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46147,
                      "name": "startTimestampPreSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46046,
                      "src": "5305:21:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 46148,
                      "name": "_startTimestampPreSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46124,
                      "src": "5329:22:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5305:46:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46150,
                  "nodeType": "ExpressionStatement",
                  "src": "5305:46:27"
                },
                {
                  "expression": {
                    "id": 46153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46151,
                      "name": "endTimestampPreSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46049,
                      "src": "5361:19:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 46152,
                      "name": "_endTimestampPreSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46126,
                      "src": "5383:20:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5361:42:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46154,
                  "nodeType": "ExpressionStatement",
                  "src": "5361:42:27"
                },
                {
                  "expression": {
                    "id": 46157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46155,
                      "name": "maxEtherCapPreSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46055,
                      "src": "5413:18:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 46156,
                      "name": "_maxEtherCapPreSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46128,
                      "src": "5434:19:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5413:40:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46158,
                  "nodeType": "ExpressionStatement",
                  "src": "5413:40:27"
                },
                {
                  "expression": {
                    "id": 46161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46159,
                      "name": "minUserContributionPreSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46061,
                      "src": "5463:26:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 46160,
                      "name": "_minUserContributionPreSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46130,
                      "src": "5492:27:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5463:56:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46162,
                  "nodeType": "ExpressionStatement",
                  "src": "5463:56:27"
                },
                {
                  "expression": {
                    "id": 46165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46163,
                      "name": "maxUserContributionPreSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46064,
                      "src": "5529:26:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 46164,
                      "name": "_maxUserContributionPreSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46132,
                      "src": "5558:27:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5529:56:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46166,
                  "nodeType": "ExpressionStatement",
                  "src": "5529:56:27"
                },
                {
                  "expression": {
                    "id": 46169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46167,
                      "name": "tokenPricePreSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46040,
                      "src": "5595:17:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 46168,
                      "name": "_tokenPricePreSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46134,
                      "src": "5615:18:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5595:38:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46170,
                  "nodeType": "ExpressionStatement",
                  "src": "5595:38:27"
                },
                {
                  "expression": {
                    "id": 46173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46171,
                      "name": "remainingEthPreSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46073,
                      "src": "5643:19:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 46172,
                      "name": "maxEtherCapPreSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46055,
                      "src": "5665:18:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5643:40:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46174,
                  "nodeType": "ExpressionStatement",
                  "src": "5643:40:27"
                },
                {
                  "expression": {
                    "id": 46177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46175,
                      "name": "minEtherCapPreSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46079,
                      "src": "5693:18:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 46176,
                      "name": "_minEtherCapPreSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46136,
                      "src": "5714:19:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5693:40:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46178,
                  "nodeType": "ExpressionStatement",
                  "src": "5693:40:27"
                }
              ]
            },
            "documentation": {
              "id": 46122,
              "nodeType": "StructuredDocumentation",
              "src": "4356:581:27",
              "text": " @dev Contract constructor\n @param _startTimestampPreSale uint256 time to start presale\n @param _endTimestampPreSale uint256 time to end presale\n @param _maxEtherCapPreSale uint256 max ether to collect at presale\n @param _minUserContributionPreSale uint256 min amount which user can buy token\n @param _maxUserContributionPreSale uint256 max amount which user can buy token\n @param _tokenPricePreSale uint256 token price in terms of ether\n @param _minEtherCapPreSale uint256 min acceptable ether collection to avoid refund"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "537570726144656d6f546f6b656e",
                    "id": 46139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5244:16:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_1cbaea49158e8c09d19bdbfcfe70e81635e8b447ff5f8f36327a09e377cf2b10",
                      "typeString": "literal_string \"SupraDemoToken\""
                    },
                    "value": "SupraDemoToken"
                  },
                  {
                    "hexValue": "535550524144454d4f",
                    "id": 46140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5262:11:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_4480824661a534ee23139060c83c00a5d1cedb39845fbf32aeaf6d84e81860d1",
                      "typeString": "literal_string \"SUPRADEMO\""
                    },
                    "value": "SUPRADEMO"
                  }
                ],
                "id": 46141,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 46138,
                  "name": "ERC20",
                  "nameLocations": [
                    "5238:5:27"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45380,
                  "src": "5238:5:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "5238:36:27"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 46143,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "5283:3:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 46144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5287:6:27",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "5283:10:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 46145,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 46142,
                  "name": "Ownable",
                  "nameLocations": [
                    "5275:7:27"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44728,
                  "src": "5275:7:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "5275:19:27"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 46137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46124,
                  "mutability": "mutable",
                  "name": "_startTimestampPreSale",
                  "nameLocation": "4971:22:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 46180,
                  "src": "4963:30:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46123,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4963:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46126,
                  "mutability": "mutable",
                  "name": "_endTimestampPreSale",
                  "nameLocation": "5011:20:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 46180,
                  "src": "5003:28:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5003:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46128,
                  "mutability": "mutable",
                  "name": "_maxEtherCapPreSale",
                  "nameLocation": "5049:19:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 46180,
                  "src": "5041:27:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46127,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5041:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46130,
                  "mutability": "mutable",
                  "name": "_minUserContributionPreSale",
                  "nameLocation": "5086:27:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 46180,
                  "src": "5078:35:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46129,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5078:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46132,
                  "mutability": "mutable",
                  "name": "_maxUserContributionPreSale",
                  "nameLocation": "5131:27:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 46180,
                  "src": "5123:35:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46131,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5123:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46134,
                  "mutability": "mutable",
                  "name": "_tokenPricePreSale",
                  "nameLocation": "5176:18:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 46180,
                  "src": "5168:26:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46133,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5168:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46136,
                  "mutability": "mutable",
                  "name": "_minEtherCapPreSale",
                  "nameLocation": "5212:19:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 46180,
                  "src": "5204:27:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46135,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5204:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4953:284:27"
            },
            "returnParameters": {
              "id": 46146,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5295:0:27"
            },
            "scope": 46558,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 46198,
            "nodeType": "FunctionDefinition",
            "src": "5930:130:27",
            "nodes": [],
            "body": {
              "id": 46197,
              "nodeType": "Block",
              "src": "6003:57:27",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46191,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46183,
                        "src": "6019:3:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46192,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46185,
                        "src": "6024:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 46190,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45220,
                      "src": "6013:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 46193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6013:19:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46194,
                  "nodeType": "ExpressionStatement",
                  "src": "6013:19:27"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 46195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6049:4:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 46189,
                  "id": 46196,
                  "nodeType": "Return",
                  "src": "6042:11:27"
                }
              ]
            },
            "documentation": {
              "id": 46181,
              "nodeType": "StructuredDocumentation",
              "src": "5746:179:27",
              "text": " @dev function is internal\n @notice mint token when called\n @param _to address to release token\n @param _amount uint256 amount of token to mint"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintToken",
            "nameLocation": "5939:9:27",
            "parameters": {
              "id": 46186,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46183,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "5957:3:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 46198,
                  "src": "5949:11:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46182,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5949:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46185,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5970:7:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 46198,
                  "src": "5962:15:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46184,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5962:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5948:30:27"
            },
            "returnParameters": {
              "id": 46189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46188,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46198,
                  "src": "5997:4:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 46187,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5997:4:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5996:6:27"
            },
            "scope": 46558,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 46266,
            "nodeType": "FunctionDefinition",
            "src": "6248:752:27",
            "nodes": [],
            "body": {
              "id": 46265,
              "nodeType": "Block",
              "src": "6284:716:27",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 46211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 46206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 46203,
                            "name": "startTimestampPreSale",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46046,
                            "src": "6315:21:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 46204,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "6339:5:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 46205,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6345:9:27",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "6339:15:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6315:39:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 46210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 46207,
                            "name": "endTimestampPreSale",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46049,
                            "src": "6358:19:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "expression": {
                              "id": 46208,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "6380:5:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 46209,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6386:9:27",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "6380:15:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6358:37:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6315:80:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7468652061756374696f6e20697320656974686572206e6f742073746172746564206f722061756374696f6e2069732066696e6973686564",
                        "id": 46212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6409:58:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d48bab2ced50e77e23f3d5393fadc0481ea41f35ec4ca3a659394a6911521718",
                          "typeString": "literal_string \"the auction is either not started or auction is finished\""
                        },
                        "value": "the auction is either not started or auction is finished"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d48bab2ced50e77e23f3d5393fadc0481ea41f35ec4ca3a659394a6911521718",
                          "typeString": "literal_string \"the auction is either not started or auction is finished\""
                        }
                      ],
                      "id": 46202,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6294:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 46213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6294:183:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46214,
                  "nodeType": "ExpressionStatement",
                  "src": "6294:183:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 46219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 46216,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6495:3:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 46217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6499:5:27",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "6495:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 46218,
                          "name": "remainingEthPreSale",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46073,
                          "src": "6508:19:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6495:32:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d6178696d756d20636170206f6e20657468657265756d2072616973696e672069732072656163686564",
                        "id": 46220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6529:44:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa3d0a9e9324fcc6b8b1a1e737df41a41ac4ffa25fbe33c18b3bfa4665d2cb5c",
                          "typeString": "literal_string \"maximum cap on ethereum raising is reached\""
                        },
                        "value": "maximum cap on ethereum raising is reached"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fa3d0a9e9324fcc6b8b1a1e737df41a41ac4ffa25fbe33c18b3bfa4665d2cb5c",
                          "typeString": "literal_string \"maximum cap on ethereum raising is reached\""
                        }
                      ],
                      "id": 46215,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6487:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 46221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6487:87:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46222,
                  "nodeType": "ExpressionStatement",
                  "src": "6487:87:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 46227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 46224,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6592:3:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 46225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6596:5:27",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "6592:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 46226,
                          "name": "minUserContributionPreSale",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46061,
                          "src": "6605:26:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6592:39:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e74206973206c657373207468616e206d696e696d756d20636f6e747269627574696f6e",
                        "id": 46228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6633:42:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3d76627eeb75cb377cb3e386c04226cb2256ea3522204d0b52efcaf2c217eded",
                          "typeString": "literal_string \"amount is less than minimum contribution\""
                        },
                        "value": "amount is less than minimum contribution"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3d76627eeb75cb377cb3e386c04226cb2256ea3522204d0b52efcaf2c217eded",
                          "typeString": "literal_string \"amount is less than minimum contribution\""
                        }
                      ],
                      "id": 46223,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6584:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 46229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6584:92:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46230,
                  "nodeType": "ExpressionStatement",
                  "src": "6584:92:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 46235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 46232,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6694:3:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 46233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6698:5:27",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "6694:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 46234,
                          "name": "maxUserContributionPreSale",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46064,
                          "src": "6707:26:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6694:39:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e74206973206d6f7265207468616e206d6178696d756d20636f6e747269627574696f6e",
                        "id": 46236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6735:42:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9186ddc3b4d13ae1fe43dbcafafdd7b8f6cd426ec06aeef2e786fae4d37c6bdb",
                          "typeString": "literal_string \"amount is more than maximum contribution\""
                        },
                        "value": "amount is more than maximum contribution"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9186ddc3b4d13ae1fe43dbcafafdd7b8f6cd426ec06aeef2e786fae4d37c6bdb",
                          "typeString": "literal_string \"amount is more than maximum contribution\""
                        }
                      ],
                      "id": 46231,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6686:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 46237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6686:92:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46238,
                  "nodeType": "ExpressionStatement",
                  "src": "6686:92:27"
                },
                {
                  "assignments": [
                    46240
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46240,
                      "mutability": "mutable",
                      "name": "_tokenToMint",
                      "nameLocation": "6796:12:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 46265,
                      "src": "6788:20:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 46239,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6788:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46245,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 46244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 46241,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6811:3:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 46242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6815:5:27",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "6811:9:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 46243,
                      "name": "tokenPricePreSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46040,
                      "src": "6823:17:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6811:29:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6788:52:27"
                },
                {
                  "expression": {
                    "id": 46249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46246,
                      "name": "remainingEthPreSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46073,
                      "src": "6850:19:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "expression": {
                        "id": 46247,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6873:3:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 46248,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6877:5:27",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "6873:9:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6850:32:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46250,
                  "nodeType": "ExpressionStatement",
                  "src": "6850:32:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46252,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6902:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 46253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6906:6:27",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6902:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46254,
                        "name": "_tokenToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46240,
                        "src": "6914:12:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 46251,
                      "name": "mintToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46198,
                      "src": "6892:9:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 46255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6892:35:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46256,
                  "nodeType": "ExpressionStatement",
                  "src": "6892:35:27"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46258,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6957:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 46259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6961:6:27",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6957:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 46260,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6969:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 46261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6973:5:27",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "6969:9:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 46262,
                        "name": "_tokenToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46240,
                        "src": "6980:12:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 46257,
                      "name": "depositPreSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46091,
                      "src": "6942:14:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 46263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6942:51:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46264,
                  "nodeType": "EmitStatement",
                  "src": "6937:56:27"
                }
              ]
            },
            "documentation": {
              "id": 46199,
              "nodeType": "StructuredDocumentation",
              "src": "6066:177:27",
              "text": " @dev function is payable\n @notice pre sale function to sell tokens at predefined price\n @notice for sake of simplicity, 1 wei = 1 supra demo token"
            },
            "functionSelector": "fdea8e0b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "presale",
            "nameLocation": "6257:7:27",
            "parameters": {
              "id": 46200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6264:2:27"
            },
            "returnParameters": {
              "id": 46201,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6284:0:27"
            },
            "scope": 46558,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46329,
            "nodeType": "FunctionDefinition",
            "src": "7698:885:27",
            "nodes": [],
            "body": {
              "id": 46328,
              "nodeType": "Block",
              "src": "8019:564:27",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 46290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 46287,
                          "name": "endTimestampPreSale",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46049,
                          "src": "8037:19:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 46288,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "8059:5:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 46289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8065:9:27",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "8059:15:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8037:37:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "70726573616c65206973206e6f74206f76657220796574",
                        "id": 46291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8076:25:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cbbc39933a45e1167d4c439ebb54666dce4d6a22f835c38992b41413906b90ff",
                          "typeString": "literal_string \"presale is not over yet\""
                        },
                        "value": "presale is not over yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cbbc39933a45e1167d4c439ebb54666dce4d6a22f835c38992b41413906b90ff",
                          "typeString": "literal_string \"presale is not over yet\""
                        }
                      ],
                      "id": 46286,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8029:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 46292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8029:73:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46293,
                  "nodeType": "ExpressionStatement",
                  "src": "8029:73:27"
                },
                {
                  "expression": {
                    "id": 46296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46294,
                      "name": "isPublicSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46037,
                      "src": "8112:12:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 46295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8127:4:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "8112:19:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46297,
                  "nodeType": "ExpressionStatement",
                  "src": "8112:19:27"
                },
                {
                  "expression": {
                    "id": 46300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46298,
                      "name": "endTimestampPublicSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46052,
                      "src": "8141:22:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 46299,
                      "name": "_endTimestampPublicSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46269,
                      "src": "8166:23:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8141:48:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46301,
                  "nodeType": "ExpressionStatement",
                  "src": "8141:48:27"
                },
                {
                  "expression": {
                    "id": 46304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46302,
                      "name": "maxEtherCapPublicSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46058,
                      "src": "8199:21:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 46303,
                      "name": "_maxEtherCapPublicSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46271,
                      "src": "8223:22:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8199:46:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46305,
                  "nodeType": "ExpressionStatement",
                  "src": "8199:46:27"
                },
                {
                  "expression": {
                    "id": 46308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46306,
                      "name": "minUserContributionPublicSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46067,
                      "src": "8255:29:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 46307,
                      "name": "_minUserContributionPublicSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46273,
                      "src": "8287:30:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8255:62:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46309,
                  "nodeType": "ExpressionStatement",
                  "src": "8255:62:27"
                },
                {
                  "expression": {
                    "id": 46312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46310,
                      "name": "maxUserContributionPublicSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46070,
                      "src": "8327:29:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 46311,
                      "name": "_maxUserContributionPublicSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46275,
                      "src": "8359:30:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8327:62:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46313,
                  "nodeType": "ExpressionStatement",
                  "src": "8327:62:27"
                },
                {
                  "expression": {
                    "id": 46316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46314,
                      "name": "tokenPricePublicSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46043,
                      "src": "8399:20:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 46315,
                      "name": "_tokenPricePublicSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46277,
                      "src": "8422:21:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8399:44:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46317,
                  "nodeType": "ExpressionStatement",
                  "src": "8399:44:27"
                },
                {
                  "expression": {
                    "id": 46320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46318,
                      "name": "minEtherCapPublicSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46082,
                      "src": "8453:21:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 46319,
                      "name": "_minEtherCapPublicSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46279,
                      "src": "8477:22:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8453:46:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46321,
                  "nodeType": "ExpressionStatement",
                  "src": "8453:46:27"
                },
                {
                  "expression": {
                    "id": 46324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46322,
                      "name": "remainingEthPublicSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46076,
                      "src": "8509:22:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 46323,
                      "name": "maxEtherCapPublicSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46058,
                      "src": "8534:21:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8509:46:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46325,
                  "nodeType": "ExpressionStatement",
                  "src": "8509:46:27"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 46326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8572:4:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 46285,
                  "id": 46327,
                  "nodeType": "Return",
                  "src": "8565:11:27"
                }
              ]
            },
            "documentation": {
              "id": 46267,
              "nodeType": "StructuredDocumentation",
              "src": "7104:589:27",
              "text": " @dev function can only be called by owner\n @notice mint token when called\n @param _endTimestampPublicSale uint256 time to end public\n @param _maxEtherCapPublicSale uint256 max ether to collect at public sale\n @param _minUserContributionPublicSale uint256 min amount which user can buy token\n @param _maxUserContributionPublicSale uint256 max amount which user can buy token\n @param _tokenPricePublicSale uint256 token price in terms of ether\n @param _minEtherCapPublicSale uint256 min acceptable ether collection to avoid refund"
            },
            "functionSelector": "0d952049",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 46282,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 46281,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "7994:9:27"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44639,
                  "src": "7994:9:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "7994:9:27"
              }
            ],
            "name": "startPublicSale",
            "nameLocation": "7707:15:27",
            "parameters": {
              "id": 46280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46269,
                  "mutability": "mutable",
                  "name": "_endTimestampPublicSale",
                  "nameLocation": "7740:23:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 46329,
                  "src": "7732:31:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46268,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7732:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46271,
                  "mutability": "mutable",
                  "name": "_maxEtherCapPublicSale",
                  "nameLocation": "7781:22:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 46329,
                  "src": "7773:30:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46270,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7773:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46273,
                  "mutability": "mutable",
                  "name": "_minUserContributionPublicSale",
                  "nameLocation": "7821:30:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 46329,
                  "src": "7813:38:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46272,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7813:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46275,
                  "mutability": "mutable",
                  "name": "_maxUserContributionPublicSale",
                  "nameLocation": "7869:30:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 46329,
                  "src": "7861:38:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46274,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7861:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46277,
                  "mutability": "mutable",
                  "name": "_tokenPricePublicSale",
                  "nameLocation": "7917:21:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 46329,
                  "src": "7909:29:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46276,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7909:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46279,
                  "mutability": "mutable",
                  "name": "_minEtherCapPublicSale",
                  "nameLocation": "7956:22:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 46329,
                  "src": "7948:30:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46278,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7948:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7722:262:27"
            },
            "returnParameters": {
              "id": 46285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46284,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46329,
                  "src": "8013:4:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 46283,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8013:4:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8012:6:27"
            },
            "scope": 46558,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46396,
            "nodeType": "FunctionDefinition",
            "src": "8765:697:27",
            "nodes": [],
            "body": {
              "id": 46395,
              "nodeType": "Block",
              "src": "8804:658:27",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 46341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 46336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 46334,
                            "name": "isPublicSale",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46037,
                            "src": "8822:12:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "74727565",
                            "id": 46335,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8838:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "8822:20:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 46340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 46337,
                            "name": "endTimestampPublicSale",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46052,
                            "src": "8846:22:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "expression": {
                              "id": 46338,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "8871:5:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 46339,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8877:9:27",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "8871:15:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8846:40:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8822:64:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7075626c69632073616c65206973206e6f74207374617274656420796574",
                        "id": 46342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8888:32:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f1ed0baf9ae6b5affcd8292a542f00e56b9c1465eb86d0064e758f8e2cf7bb6",
                          "typeString": "literal_string \"public sale is not started yet\""
                        },
                        "value": "public sale is not started yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f1ed0baf9ae6b5affcd8292a542f00e56b9c1465eb86d0064e758f8e2cf7bb6",
                          "typeString": "literal_string \"public sale is not started yet\""
                        }
                      ],
                      "id": 46333,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8814:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 46343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8814:107:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46344,
                  "nodeType": "ExpressionStatement",
                  "src": "8814:107:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 46349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 46346,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "8939:3:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 46347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8943:5:27",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "8939:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 46348,
                          "name": "remainingEthPublicSale",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46076,
                          "src": "8952:22:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8939:35:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d6178696d756d20636170206f6e20657468657265756d2072616973696e672069732072656163686564",
                        "id": 46350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8976:44:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa3d0a9e9324fcc6b8b1a1e737df41a41ac4ffa25fbe33c18b3bfa4665d2cb5c",
                          "typeString": "literal_string \"maximum cap on ethereum raising is reached\""
                        },
                        "value": "maximum cap on ethereum raising is reached"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fa3d0a9e9324fcc6b8b1a1e737df41a41ac4ffa25fbe33c18b3bfa4665d2cb5c",
                          "typeString": "literal_string \"maximum cap on ethereum raising is reached\""
                        }
                      ],
                      "id": 46345,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8931:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 46351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8931:90:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46352,
                  "nodeType": "ExpressionStatement",
                  "src": "8931:90:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 46357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 46354,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "9039:3:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 46355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9043:5:27",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "9039:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 46356,
                          "name": "minUserContributionPublicSale",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46067,
                          "src": "9052:29:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9039:42:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e74206973206c657373207468616e206d696e696d756d20636f6e747269627574696f6e",
                        "id": 46358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9083:42:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3d76627eeb75cb377cb3e386c04226cb2256ea3522204d0b52efcaf2c217eded",
                          "typeString": "literal_string \"amount is less than minimum contribution\""
                        },
                        "value": "amount is less than minimum contribution"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3d76627eeb75cb377cb3e386c04226cb2256ea3522204d0b52efcaf2c217eded",
                          "typeString": "literal_string \"amount is less than minimum contribution\""
                        }
                      ],
                      "id": 46353,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9031:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 46359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9031:95:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46360,
                  "nodeType": "ExpressionStatement",
                  "src": "9031:95:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 46365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 46362,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "9144:3:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 46363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9148:5:27",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "9144:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 46364,
                          "name": "maxUserContributionPublicSale",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46070,
                          "src": "9157:29:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9144:42:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e74206973206d6f7265207468616e206d6178696d756d20636f6e747269627574696f6e",
                        "id": 46366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9188:42:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9186ddc3b4d13ae1fe43dbcafafdd7b8f6cd426ec06aeef2e786fae4d37c6bdb",
                          "typeString": "literal_string \"amount is more than maximum contribution\""
                        },
                        "value": "amount is more than maximum contribution"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9186ddc3b4d13ae1fe43dbcafafdd7b8f6cd426ec06aeef2e786fae4d37c6bdb",
                          "typeString": "literal_string \"amount is more than maximum contribution\""
                        }
                      ],
                      "id": 46361,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9136:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 46367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9136:95:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46368,
                  "nodeType": "ExpressionStatement",
                  "src": "9136:95:27"
                },
                {
                  "assignments": [
                    46370
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46370,
                      "mutability": "mutable",
                      "name": "_tokenToMint",
                      "nameLocation": "9249:12:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 46395,
                      "src": "9241:20:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 46369,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9241:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46375,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 46374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 46371,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "9264:3:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 46372,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9268:5:27",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "9264:9:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 46373,
                      "name": "tokenPricePublicSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46043,
                      "src": "9276:20:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9264:32:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9241:55:27"
                },
                {
                  "expression": {
                    "id": 46379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46376,
                      "name": "remainingEthPublicSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46076,
                      "src": "9306:22:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "expression": {
                        "id": 46377,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "9332:3:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 46378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9336:5:27",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "9332:9:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9306:35:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46380,
                  "nodeType": "ExpressionStatement",
                  "src": "9306:35:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46382,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9361:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 46383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9365:6:27",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9361:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46384,
                        "name": "_tokenToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46370,
                        "src": "9373:12:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 46381,
                      "name": "mintToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46198,
                      "src": "9351:9:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 46385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9351:35:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46386,
                  "nodeType": "ExpressionStatement",
                  "src": "9351:35:27"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46388,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9419:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 46389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9423:6:27",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9419:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 46390,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9431:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 46391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9435:5:27",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "9431:9:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 46392,
                        "name": "_tokenToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46370,
                        "src": "9442:12:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 46387,
                      "name": "depositPublicSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46100,
                      "src": "9401:17:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 46393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9401:54:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46394,
                  "nodeType": "EmitStatement",
                  "src": "9396:59:27"
                }
              ]
            },
            "documentation": {
              "id": 46330,
              "nodeType": "StructuredDocumentation",
              "src": "8589:171:27",
              "text": " @dev function is payable\n @notice can only be called when presale gets over\n @notice public sale function to sell tokens at predefined price"
            },
            "functionSelector": "33bc1c5c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "publicSale",
            "nameLocation": "8774:10:27",
            "parameters": {
              "id": 46331,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8784:2:27"
            },
            "returnParameters": {
              "id": 46332,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8804:0:27"
            },
            "scope": 46558,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46417,
            "nodeType": "FunctionDefinition",
            "src": "9610:192:27",
            "nodes": [],
            "body": {
              "id": 46416,
              "nodeType": "Block",
              "src": "9699:103:27",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46407,
                        "name": "_transferAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46401,
                        "src": "9719:13:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46408,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46399,
                        "src": "9734:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 46406,
                      "name": "mintToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46198,
                      "src": "9709:9:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 46409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9709:33:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46410,
                  "nodeType": "ExpressionStatement",
                  "src": "9709:33:27"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 46412,
                        "name": "_transferAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46401,
                        "src": "9772:13:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46413,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46399,
                        "src": "9787:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 46411,
                      "name": "adminTokenDist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46107,
                      "src": "9757:14:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 46414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9757:38:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46415,
                  "nodeType": "EmitStatement",
                  "src": "9752:43:27"
                }
              ]
            },
            "documentation": {
              "id": 46397,
              "nodeType": "StructuredDocumentation",
              "src": "9468:137:27",
              "text": " @dev function can only be called by owner\n @notice admin can call function to release token to specified address"
            },
            "functionSelector": "d0a08012",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 46404,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 46403,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "9689:9:27"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44639,
                  "src": "9689:9:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "9689:9:27"
              }
            ],
            "name": "distributeTokenAdmin",
            "nameLocation": "9619:20:27",
            "parameters": {
              "id": 46402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46399,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "9648:7:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 46417,
                  "src": "9640:15:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46398,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9640:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46401,
                  "mutability": "mutable",
                  "name": "_transferAddr",
                  "nameLocation": "9665:13:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 46417,
                  "src": "9657:21:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46400,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9657:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9639:40:27"
            },
            "returnParameters": {
              "id": 46405,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9699:0:27"
            },
            "scope": 46558,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46487,
            "nodeType": "FunctionDefinition",
            "src": "10029:666:27",
            "nodes": [],
            "body": {
              "id": 46486,
              "nodeType": "Block",
              "src": "10068:627:27",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 46432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 46425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 46422,
                            "name": "endTimestampPreSale",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46049,
                            "src": "10099:19:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 46423,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "10121:5:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 46424,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10127:9:27",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "10121:15:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10099:37:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 46431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 46428,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 46426,
                                  "name": "maxEtherCapPreSale",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 46055,
                                  "src": "10141:18:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 46427,
                                  "name": "remainingEthPreSale",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 46073,
                                  "src": "10162:19:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10141:40:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 46429,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "10140:42:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 46430,
                            "name": "minEtherCapPreSale",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46079,
                            "src": "10185:18:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10140:63:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "10099:104:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "726566756e642063616e206f6e6c7920626520636c61696d6564206966206d696e696d756d2063617020697320616c72656164792072656163686564",
                        "id": 46433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10217:62:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_84bb08558677b019727bbb4b72c67bf1deac06b8c2b502c2c5453d1da0d19ae6",
                          "typeString": "literal_string \"refund can only be claimed if minimum cap is already reached\""
                        },
                        "value": "refund can only be claimed if minimum cap is already reached"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_84bb08558677b019727bbb4b72c67bf1deac06b8c2b502c2c5453d1da0d19ae6",
                          "typeString": "literal_string \"refund can only be claimed if minimum cap is already reached\""
                        }
                      ],
                      "id": 46421,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10078:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 46434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10078:211:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46435,
                  "nodeType": "ExpressionStatement",
                  "src": "10078:211:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 46442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 46438,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10318:3:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 46439,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10322:6:27",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10318:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 46437,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44966,
                            "src": "10308:9:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 46440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10308:21:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 46441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10332:1:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "10308:25:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f2073757072612064656d6f20746f6b656e2062616c616e6365206465746563746564",
                        "id": 46443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10335:38:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4270095c731f5fe59d7fa6358c562f2e562ace43416fa6a0e765fab99ead65bb",
                          "typeString": "literal_string \"no supra demo token balance detected\""
                        },
                        "value": "no supra demo token balance detected"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4270095c731f5fe59d7fa6358c562f2e562ace43416fa6a0e765fab99ead65bb",
                          "typeString": "literal_string \"no supra demo token balance detected\""
                        }
                      ],
                      "id": 46436,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10300:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 46444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10300:74:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46445,
                  "nodeType": "ExpressionStatement",
                  "src": "10300:74:27"
                },
                {
                  "assignments": [
                    46447
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46447,
                      "mutability": "mutable",
                      "name": "userBalance",
                      "nameLocation": "10392:11:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 46486,
                      "src": "10384:19:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 46446,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10384:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46452,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46449,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10416:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 46450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10420:6:27",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10416:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 46448,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44966,
                      "src": "10406:9:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 46451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10406:21:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10384:43:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46456,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10454:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_tokenSale_$46558",
                              "typeString": "contract tokenSale"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_tokenSale_$46558",
                              "typeString": "contract tokenSale"
                            }
                          ],
                          "id": 46455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10446:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46454,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10446:7:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10446:13:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46458,
                        "name": "userBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46447,
                        "src": "10461:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 46453,
                      "name": "transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44990,
                      "src": "10437:8:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 46459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10437:36:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46460,
                  "nodeType": "ExpressionStatement",
                  "src": "10437:36:27"
                },
                {
                  "assignments": [
                    46462,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46462,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "10489:7:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 46486,
                      "src": "10484:12:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 46461,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "10484:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 46472,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 46470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10557:2:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 46463,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "10501:3:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 46464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10505:6:27",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "10501:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 46465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10512:4:27",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "10501:15:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 46469,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 46468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 46466,
                            "name": "userBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46447,
                            "src": "10524:11:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 46467,
                            "name": "tokenPricePreSale",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46040,
                            "src": "10538:17:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10524:31:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "10501:55:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 46471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10501:59:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10483:77:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46474,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46462,
                        "src": "10578:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e64204574686572",
                        "id": 46475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10587:22:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        },
                        "value": "Failed to send Ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        }
                      ],
                      "id": 46473,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10570:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 46476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10570:40:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46477,
                  "nodeType": "ExpressionStatement",
                  "src": "10570:40:27"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46479,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10644:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 46480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10648:6:27",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10644:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 46483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 46481,
                          "name": "userBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46447,
                          "src": "10656:11:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 46482,
                          "name": "tokenPricePreSale",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46040,
                          "src": "10670:17:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10656:31:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 46478,
                      "name": "preSaleRefundClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46114,
                      "src": "10625:18:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 46484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10625:63:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46485,
                  "nodeType": "EmitStatement",
                  "src": "10620:68:27"
                }
              ]
            },
            "documentation": {
              "id": 46418,
              "nodeType": "StructuredDocumentation",
              "src": "9808:216:27",
              "text": " @dev function can only be called when min number of ether is NOT collected at specified time\n at pre sale\n @notice balance of token is refunded to contract and ether is released to user"
            },
            "functionSelector": "537c6401",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimRefundPreSale",
            "nameLocation": "10038:18:27",
            "parameters": {
              "id": 46419,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10056:2:27"
            },
            "returnParameters": {
              "id": 46420,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10068:0:27"
            },
            "scope": 46558,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46557,
            "nodeType": "FunctionDefinition",
            "src": "10925:700:27",
            "nodes": [],
            "body": {
              "id": 46556,
              "nodeType": "Block",
              "src": "10967:658:27",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 46502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 46495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 46492,
                            "name": "endTimestampPublicSale",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46052,
                            "src": "10998:22:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 46493,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "11023:5:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 46494,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11029:9:27",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "11023:15:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10998:40:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 46501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 46498,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 46496,
                                  "name": "maxEtherCapPublicSale",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 46058,
                                  "src": "11059:21:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 46497,
                                  "name": "remainingEthPublicSale",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 46076,
                                  "src": "11083:22:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11059:46:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 46499,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "11058:48:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 46500,
                            "name": "minEtherCapPublicSale",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46082,
                            "src": "11109:21:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11058:72:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "10998:132:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "726566756e642063616e206f6e6c7920626520636c61696d6564206966206d696e696d756d2063617020697320616c72656164792072656163686564",
                        "id": 46503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11144:62:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_84bb08558677b019727bbb4b72c67bf1deac06b8c2b502c2c5453d1da0d19ae6",
                          "typeString": "literal_string \"refund can only be claimed if minimum cap is already reached\""
                        },
                        "value": "refund can only be claimed if minimum cap is already reached"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_84bb08558677b019727bbb4b72c67bf1deac06b8c2b502c2c5453d1da0d19ae6",
                          "typeString": "literal_string \"refund can only be claimed if minimum cap is already reached\""
                        }
                      ],
                      "id": 46491,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10977:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 46504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10977:239:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46505,
                  "nodeType": "ExpressionStatement",
                  "src": "10977:239:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 46512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 46508,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "11245:3:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 46509,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11249:6:27",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "11245:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 46507,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44966,
                            "src": "11235:9:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 46510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11235:21:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 46511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11259:1:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11235:25:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f2073757072612064656d6f20746f6b656e2062616c616e6365206465746563746564",
                        "id": 46513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11262:38:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4270095c731f5fe59d7fa6358c562f2e562ace43416fa6a0e765fab99ead65bb",
                          "typeString": "literal_string \"no supra demo token balance detected\""
                        },
                        "value": "no supra demo token balance detected"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4270095c731f5fe59d7fa6358c562f2e562ace43416fa6a0e765fab99ead65bb",
                          "typeString": "literal_string \"no supra demo token balance detected\""
                        }
                      ],
                      "id": 46506,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11227:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 46514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11227:74:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46515,
                  "nodeType": "ExpressionStatement",
                  "src": "11227:74:27"
                },
                {
                  "assignments": [
                    46517
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46517,
                      "mutability": "mutable",
                      "name": "userBalance",
                      "nameLocation": "11319:11:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 46556,
                      "src": "11311:19:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 46516,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11311:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46522,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46519,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "11343:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 46520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11347:6:27",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "11343:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 46518,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44966,
                      "src": "11333:9:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 46521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11333:21:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11311:43:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46526,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "11381:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_tokenSale_$46558",
                              "typeString": "contract tokenSale"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_tokenSale_$46558",
                              "typeString": "contract tokenSale"
                            }
                          ],
                          "id": 46525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11373:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46524,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11373:7:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11373:13:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46528,
                        "name": "userBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46517,
                        "src": "11388:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 46523,
                      "name": "transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44990,
                      "src": "11364:8:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 46529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11364:36:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46530,
                  "nodeType": "ExpressionStatement",
                  "src": "11364:36:27"
                },
                {
                  "assignments": [
                    46532,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46532,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "11416:7:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 46556,
                      "src": "11411:12:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 46531,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "11411:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 46542,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 46540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11487:2:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 46533,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "11428:3:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 46534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11432:6:27",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "11428:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 46535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11439:4:27",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "11428:15:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 46539,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 46538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 46536,
                            "name": "userBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46517,
                            "src": "11451:11:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 46537,
                            "name": "tokenPricePublicSale",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46043,
                            "src": "11465:20:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11451:34:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "11428:58:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 46541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11428:62:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11410:80:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46544,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46532,
                        "src": "11508:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e64204574686572",
                        "id": 46545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11517:22:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        },
                        "value": "Failed to send Ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        }
                      ],
                      "id": 46543,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11500:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 46546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11500:40:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46547,
                  "nodeType": "ExpressionStatement",
                  "src": "11500:40:27"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46549,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "11574:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 46550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11578:6:27",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "11574:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 46553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 46551,
                          "name": "userBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46517,
                          "src": "11586:11:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 46552,
                          "name": "tokenPricePreSale",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46040,
                          "src": "11600:17:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11586:31:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 46548,
                      "name": "preSaleRefundClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46114,
                      "src": "11555:18:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 46554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11555:63:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46555,
                  "nodeType": "EmitStatement",
                  "src": "11550:68:27"
                }
              ]
            },
            "documentation": {
              "id": 46488,
              "nodeType": "StructuredDocumentation",
              "src": "10701:219:27",
              "text": " @dev function can only be called when min number of ether is NOT collected at specified time\n at public sale\n @notice balance of token is refunded to contract and ether is released to user"
            },
            "functionSelector": "aa776d82",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimRefundPublicSale",
            "nameLocation": "10934:21:27",
            "parameters": {
              "id": 46489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10955:2:27"
            },
            "returnParameters": {
              "id": 46490,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10967:0:27"
            },
            "scope": 46558,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 46027,
              "name": "ERC20",
              "nameLocations": [
                "357:5:27"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45380,
              "src": "357:5:27"
            },
            "id": 46028,
            "nodeType": "InheritanceSpecifier",
            "src": "357:5:27"
          },
          {
            "baseName": {
              "id": 46029,
              "name": "Ownable",
              "nameLocations": [
                "364:7:27"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44728,
              "src": "364:7:27"
            },
            "id": 46030,
            "nodeType": "InheritanceSpecifier",
            "src": "364:7:27"
          }
        ],
        "canonicalName": "tokenSale",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 46026,
          "nodeType": "StructuredDocumentation",
          "src": "186:147:27",
          "text": " @title tokenSale\n @notice sale contract of tokens at pre-define price at 2 stages- pre sale and public sale\n @author Abhijay Paliwal"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          46558,
          44728,
          45380,
          44770,
          45484,
          45458,
          45514
        ],
        "name": "tokenSale",
        "nameLocation": "344:9:27",
        "scope": 46559,
        "usedErrors": [
          44594,
          44599,
          44740,
          44745,
          44750,
          44759,
          44764,
          44769
        ],
        "usedEvents": [
          44605,
          45392,
          45401,
          46091,
          46100,
          46107,
          46114,
          46121
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 27
}